{"version":3,"sources":["conponents/navbar/Navbar.module.css","conponents/dialogs/DialogItem/DialogItem.module.css","conponents/dialogs/Dialogs.module.css","conponents/profile/MyPosts/MyPosts.module.css","conponents/profile/MyPosts/Post/Post.module.css","conponents/navbar/friends/friends.module.css","conponents/News/News.module.css","conponents/header/Header.module.css","conponents/footer/Footer.module.css","conponents/profile/ProfileInfo/ProfileInfo.module.css","reportWebVitals.ts","redux/dialogs-reducer.ts","redux/profile-reducer.ts","redux/store.ts","conponents/header/Header.tsx","conponents/navbar/friends/friends.tsx","conponents/navbar/Navbar.tsx","conponents/footer/Footer.tsx","conponents/News/News.tsx","conponents/Music/Music.tsx","conponents/Settings/Settings.tsx","conponents/profile/ProfileInfo/ProfileInfo.tsx","conponents/profile/MyPosts/Post/Post.tsx","conponents/profile/MyPosts/MyPosts.tsx","conponents/profile/MyPosts/MyPostsCountainer.tsx","conponents/profile/Profile.tsx","conponents/dialogs/DialogItem/DialogsItem.tsx","conponents/dialogs/Message/Message.tsx","conponents/dialogs/Dialogs.tsx","conponents/dialogs/DialogsCountainer.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","dialogs","id","name","img","messages","message","newMessageBody","dialogsReducer","state","action","type","body","newMessage","push","newPostText","posts","likeCount","profileReducer","newPost","newText","store","_state","profilePage","dialogsPage","navbarPage","friends","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","Header","className","classes","header","src","alt","Friends","props","friendAvatar","friendName","Navbar","sidebarMap","map","f","nav","item","to","activeClassName","active","grid","Footer","footer","News","news","newsTitle","Music","Settings","ProfileInfo","content","Post","post","avatar","like","MyPosts","postsElement","p","createPost","createPostTitle","createPostArea","value","onChange","e","text","currentTarget","updateNewPostText","createPostBtn","onClick","addPost","MyPostsCountainer","updateNewPostTextActionCreator","Profile","profile","DialogItem","path","dialog","dialogAvatar","dialogText","dialogUsername","Message","Dialogs","dialogsElements","messagesElements","dialogsHeader","dialogItems","placeholder","updateNewMessageBody","sendMessage","DialogsCountainer","updateNewMessageBodyCreator","App","render","component","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,qBAAqB,WAAa,6B,oBCAjJD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,eAAiB,mCAAmC,OAAS,2BAA2B,aAAe,iCAAiC,WAAa,iC,iBCA3OD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,2B,gBCA9LD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,WAAa,4BAA4B,gBAAkB,iCAAiC,eAAiB,gCAAgC,cAAgB,iC,iBCA9MD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,QAAU,sBAAsB,KAAO,qB,kBCAjHD,EAAOC,QAAU,CAAC,aAAe,8BAA8B,WAAa,8B,kBCA5ED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,0B,kBCAxDD,EAAOC,QAAU,CAAC,OAAS,yB,iBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,kCCA3BD,EAAOC,QAAU,CAAC,QAAU,+B,sGCabC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCOVQ,EAAe,CACfC,QAAS,CACL,CACIC,GAAI,EACJC,KAAM,YACNC,IAAK,2EAET,CACIF,GAAI,EACJC,KAAM,UACNC,IAAK,2EAET,CACIF,GAAI,EACJC,KAAM,WACNC,IAAK,4EAGbC,SAAU,CACN,CAACH,GAAI,EAAGI,QAAS,aACjB,CAACJ,GAAI,EAAGI,QAAS,oBACjB,CAACJ,GAAI,EAAGI,QAAS,cAErBC,eAAe,IAqBJC,EAnBS,WAAkE,IAAjEC,EAAgE,uDAA5CT,EAAaU,EAA+B,uCACpF,OAAQA,EAAOC,MACX,IAAK,0BAED,OADAF,EAAMF,eAAiBG,EAAOE,KACvBH,EACX,IAAK,eACD,IAAIG,EAAOH,EAAMF,eACjB,GAAa,KAATK,EAAa,CACbH,EAAMF,eAAiB,GACvB,IAAIM,EAA0B,CAC1BX,GAAI,EAAGI,QAASM,GAEpBH,EAAMJ,SAASS,KAAKD,GAExB,OAAOJ,EACX,QACI,OAAOA,ICzChBT,EAAe,CACfe,YAAa,GACbC,MAAO,CACH,CAACd,GAAI,EAAGI,QAAS,YAAaW,UAAW,KAyBlCC,EArBS,WAAsE,IAArET,EAAoE,uDAA5CT,EAAaU,EAA+B,uCAExF,OAAOA,EAAOC,MACV,IAAK,WACD,GAAyB,KAAtBF,EAAMM,YAAoB,CACzB,IAAII,EAAoB,CACpBjB,GAAI,EACJI,QAASG,EAAMM,YACfE,UAAW,GAEfR,EAAMO,MAAMF,KAAKK,GACjBV,EAAMM,YAAc,GAExB,OAAON,EACX,IAAK,uBAED,OADAA,EAAMM,YAAcL,EAAOU,QACpBX,EACX,QACI,OAAOA,ICyILY,EAxEc,CACzBC,OAAQ,CACJC,YAAa,CACTR,YAAa,GACbC,MAAO,CACH,CAACd,GAAI,EAAGI,QAAS,YAAaW,UAAW,KAGjDO,YAAa,CACTvB,QAAS,CACL,CACIC,GAAI,EACJC,KAAM,YACNC,IAAK,2EAET,CACIF,GAAI,EACJC,KAAM,UACNC,IAAK,2EAET,CACIF,GAAI,EACJC,KAAM,WACNC,IAAK,4EAGbC,SAAU,CACN,CAACH,GAAI,EAAGI,QAAS,aACjB,CAACJ,GAAI,EAAGI,QAAS,oBACjB,CAACJ,GAAI,EAAGI,QAAS,cAErBC,eAAe,IAEnBkB,WAAY,CACRC,QAAS,CACL,CACIxB,GAAI,EACJC,KAAM,SACNC,IAAK,gFAET,CACIF,GAAI,EACJC,KAAM,QACNC,IAAK,gFAET,CACIF,GAAI,EACJC,KAAM,QACNC,IAAK,mFAKpBuB,gBAAkB,WACfC,QAAQC,IAAI,sBAEhBC,SAxDyB,WAyDrB,OAAOC,KAAKT,QAEhBU,UA3DyB,SA2DfC,GACNF,KAAKJ,gBAAkBM,GAE3BC,SA9DyB,SA8DhBxB,GACLqB,KAAKT,OAAOC,YAAcL,EAAea,KAAKT,OAAOC,YAAcb,GACnEqB,KAAKT,OAAOE,YAAchB,EAAeuB,KAAKT,OAAOE,YAAcd,GACnEqB,KAAKJ,gBAAgBI,KAAKT,U,wDCjKnBa,EAPA,WACX,OACI,wBAAQC,UAAWC,IAAQC,OAA3B,SACI,qBAAKC,IAAI,+EAA+EC,IAAI,Q,iCCMzFC,EARC,SAACC,GACd,OACI,gCACI,qBAAKH,IAAKG,EAAMtC,IAAKoC,IAAI,GAAGJ,UAAWC,IAAQM,eAC/C,qBAAKP,UAAWC,IAAQO,WAAxB,SAAqCF,EAAMvC,SAFrCuC,EAAMxC,KCmCR2C,EA/BA,SAACH,GACZ,IAAII,EAAaJ,EAAMrB,MAAMS,WAAWL,WAAWC,QAAQqB,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAS9C,GAAI8C,EAAE9C,GAAIC,KAAM6C,EAAE7C,KAAMC,IAAK4C,EAAE5C,SAC5G,OACI,sBAAKgC,UAAWC,IAAQY,IAAxB,UACI,qBAAKb,UAAWC,IAAQa,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,WACHC,gBAAiBf,IAAQgB,OADlC,uBAGJ,qBAAKjB,UAAS,UAAKC,IAAQa,KAAb,YAAqBb,IAAQgB,QAA3C,SACI,cAAC,IAAD,CAASF,GAAG,WACHC,gBAAiBf,IAAQgB,OADlC,wBAGJ,qBAAKjB,UAAWC,IAAQa,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,QACHC,gBAAiBf,IAAQgB,OADlC,oBAGJ,qBAAKjB,UAAWC,IAAQa,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,SACHC,gBAAiBf,IAAQgB,OADlC,qBAGJ,qBAAKjB,UAAWC,IAAQa,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,YACHC,gBAAiBf,IAAQgB,OADlC,wBAGJ,gCACI,cAAC,IAAD,CAASF,GAAG,WAAWf,UAAWC,IAAQO,WAA1C,qBACA,qBAAKR,UAAWC,IAAQiB,KAAxB,SAA+BR,W,iBC3BhCS,EAPA,WACX,OACI,wBAAQnB,UAAWC,IAAQmB,OAA3B,qB,wBCQOC,EATF,WACT,OACI,8BACI,qBAAKrB,UAAWC,IAAQqB,KAAxB,SACI,qBAAKtB,UAAWC,IAAQsB,UAAxB,uBCEDC,EAPD,WACV,OACI,yCCKOC,EAPE,WACb,OACI,4C,kCCSOC,EATK,WAChB,OACI,8BACI,qBAAK1B,UAAWC,IAAQ0B,QAAxB,kC,kCCeGC,EAfmB,SAACtB,GAC/B,OACI,sBAAKN,UAAWC,IAAQ4B,KAAxB,UACQ,qBAAK7B,UAAWC,IAAQ6B,OACnB3B,IAAI,kFAAkFC,IAAI,OACnG,qBAAKJ,UAAWC,IAAQ/B,QAAxB,SACKoC,EAAMpC,UAGX,sBAAK8B,UAAWC,IAAQ8B,KAAxB,UACI,uCACCzB,EAAMzB,eAToByB,EAAMxC,KCkClCkE,EA1BwB,SAAC1B,GAEpC,IASI2B,EACA3B,EAAM1B,MAAM+B,KAAI,SAAAuB,GAAC,OAAI,cAAC,EAAD,CAAMpE,GAAIoE,EAAEpE,GAAII,QAASgE,EAAEhE,QAASW,UAAWqD,EAAErD,eAC1E,OACI,sBAAKmB,UAAWC,IAAQrB,MAAxB,UACI,sBAAKoB,UAAWC,IAAQkC,WAAxB,UACI,qBAAKnC,UAAWC,IAAQmC,gBAAxB,sBACA,0BAAUpC,UAAWC,IAAQoC,eACnBC,MAAOhC,EAAM3B,YACb4D,SAbH,SAACC,GAChB,IAAIC,EAAOD,EAAEE,cAAcJ,MAC3BhC,EAAMqC,kBAAkBF,IAShB,eAGA,wBAAQzC,UAAWC,IAAQ2C,cAAeC,QAlBtC,WACZvC,EAAMwC,WAiBE,gCAEHb,MCXEc,EAlBkC,SAACzC,GAC9C,IAAIjC,EAAQiC,EAAMrB,MAAMS,WASxB,OACG,cAAC,EAAD,CACSiD,kBANO,SAACF,GAChB,IAAInE,EZRkC,SAACmE,GAE3C,MAAO,CACHlE,KAAM,uBACNS,QAAQyD,GYIKO,CAA+BP,GAC5CnC,EAAMrB,MAAMa,SAASxB,IAKbwE,QAXE,WACNxC,EAAMrB,MAAMa,SZRb,CACHvB,KAAM,cYkBEI,YAAaN,EAAMc,YAAYR,YAC/BC,MAAOP,EAAMc,YAAYP,SCF1BqE,EATwB,SAAC3C,GAEpC,OACI,sBAAKN,UAAWC,IAAQiD,QAAxB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAmBjE,MAAOqB,EAAMrB,Y,iCCG7BkE,EAX8B,SAAC7C,GAC1C,IAAI8C,EAAO,YAAc9C,EAAMxC,GAC/B,OACI,sBAAKkC,UAAS,UAAKC,IAAQoD,OAAb,YAAuBpD,IAAQgB,OAA/B,YAAyChB,IAAQiB,MAA/D,UACI,cAAC,IAAD,CAASH,GAAIqC,EAAb,SAAoB,qBAAKjD,IAAKG,EAAMtC,IAAKoC,IAAI,KAAKJ,UAAWC,IAAQqD,iBACrE,qBAAKtD,UAAWC,IAAQsD,WAAxB,uBACA,cAAC,IAAD,CAASxC,GAAIqC,EAAMpC,gBAAiBf,IAAQgB,OAAuBjB,UAAWC,IAAQuD,eAAtF,SAAuGlD,EAAMvC,MAApDuC,EAAMxC,QCF5D2F,EANwB,SAACnD,GACpC,OACI,qBAAKN,UAAWC,IAAQ/B,QAAxB,SAAiDoC,EAAMpC,SAAjBoC,EAAMxC,KCuCrC4F,EAnC4B,SAACpD,GACxC,IAAIjC,EAAQiC,EAAMlB,YAEduE,EAAkBtF,EAAMR,QACvB8C,KAAI,SAAA0C,GAAM,OAAI,cAAC,EAAD,CAAYtF,KAAMsF,EAAOtF,KAAMD,GAAIuF,EAAOvF,GAAIE,IAAKqF,EAAOrF,SACzE4F,EAAmBvF,EAAMJ,SACxB0C,KAAI,SAAAzC,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,QAASJ,GAAII,EAAQJ,QAE7DK,EAAiBE,EAAMF,eAU7B,OACI,sBAAK6B,UAAWC,IAAQpC,QAAxB,UACI,oBAAImC,UAAWC,IAAQ4D,cAAvB,sBACA,qBAAK7D,UAAWC,IAAQ6D,YAAxB,SACKH,IAEL,sBAAK3D,UAAWC,IAAQhC,SAAxB,UACI,8BAAM2F,IACN,0BACIG,YAAY,QACZzB,MAAOnE,EACPoE,SAhBW,SAACC,GACzB,IAAIhE,EAAQgE,EAAEE,cAAcJ,MAC3BhC,EAAM0D,qBAAqBxF,IAWnB,eAIA,wBAAQqE,QApBO,WACvBvC,EAAM2D,eAmBE,yBCdDC,EAnB+C,SAAC5D,GAC3D,IAAIjC,EAAQiC,EAAMrB,MAAMS,WAAWN,YAYnC,OACI,cAAC,EAAD,CAAY4E,qBAPW,SAACxF,GACxB8B,EAAMrB,MAAMa,SlBXuB,SAACtB,GAExC,MAAO,CACHD,KAAM,0BACNC,KAAKA,GkBOgB2F,CAA4B3F,KAOrCyF,YAXW,WACvB3D,EAAMrB,MAAMa,SlBZT,CACHvB,KAAM,kBkBsBMa,YAAaf,KCclB+F,GAtBgB,SAAC9D,GAC5B,OACQ,sBAAKN,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAQf,MAAOqB,EAAMrB,QACrB,sBAAKe,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOoD,KAAK,WACLiB,OAAQ,kBAAM,cAAC,EAAD,CACXpF,MAAOqB,EAAMrB,WAEvB,cAAC,IAAD,CAAOmE,KAAK,WACLiB,OAAQ,kBAAM,cAAC,EAAD,CACXpF,MAAOqB,EAAMrB,WACvB,cAAC,IAAD,CAAOmE,KAAK,QAAQkB,UAAWjD,IAC/B,cAAC,IAAD,CAAO+B,KAAK,SAASkB,UAAW9C,IAChC,cAAC,IAAD,CAAO4B,KAAK,YAAYkB,UAAW7C,OAEvC,cAAC,EAAD,QC3BX8C,GAAqB,SAAClG,GACvBmG,IAASH,OACL,cAAC,IAAMI,WAAP,UACI,cAAC,IAAD,UACI,cAAC,GAAD,CAAKxF,MAAOA,QAEAyF,SAASC,eAAe,UAIpDJ,GAAmBtF,EAAMS,YAEzBT,EAAMW,WAAU,WACAX,EAAMS,WAClB6E,QAMJpH,M","file":"static/js/main.8ef2d4e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3nwFj\",\"item\":\"Navbar_item__2jCv2\",\"active\":\"Navbar_active__2nbGF\",\"grid\":\"Navbar_grid__2tPHl\",\"friendName\":\"Navbar_friendName__3xyo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"DialogItem_grid__1qmKQ\",\"dialog\":\"DialogItem_dialog__17A9_\",\"dialogUsername\":\"DialogItem_dialogUsername__3-70m\",\"active\":\"DialogItem_active__1EdvY\",\"dialogAvatar\":\"DialogItem_dialogAvatar__2bkkz\",\"dialogText\":\"DialogItem_dialogText__3DC1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__RzOcu\",\"dialogsHeader\":\"Dialogs_dialogsHeader__3WfE8\",\"dialogItems\":\"Dialogs_dialogItems__vCd15\",\"messages\":\"Dialogs_messages__UCbit\",\"message\":\"Dialogs_message__lseor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__23lra\",\"createPost\":\"MyPosts_createPost__2168h\",\"createPostTitle\":\"MyPosts_createPostTitle__QhIsA\",\"createPostArea\":\"MyPosts_createPostArea__3vQ1G\",\"createPostBtn\":\"MyPosts_createPostBtn__2qod0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2bc6j\",\"avatar\":\"Post_avatar__4jhRE\",\"message\":\"Post_message__3mYp2\",\"like\":\"Post_like__1SNCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendAvatar\":\"friends_friendAvatar__37eWw\",\"friendName\":\"friends_friendName__3xPap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__NGB6F\",\"newsTitle\":\"News_newsTitle__3uN_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__aq35t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2UWev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__e7TXu\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {dialogsPage, dispatchActionTypes, messageType} from \"./store\";\r\n\r\n\r\n\r\nexport const sendMessageCreator = () => {\r\n    return {\r\n        type: 'SEND_MESSAGE'\r\n    } as const\r\n}\r\nexport const updateNewMessageBodyCreator = (body:string) => {\r\n\r\n    return {\r\n        type: 'UPDATE_NEW_MESSAGE_BODY',\r\n        body:body\r\n    } as const\r\n}\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Valentine\",\r\n            img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Natasha\",\r\n            img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Abrahima\",\r\n            img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n        },\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hihihihih'},\r\n        {id: 2, message: 'How is your s ds'},\r\n        {id: 3, message: 'Hihihihih'},\r\n    ],\r\n    newMessageBody:''\r\n}\r\n const dialogsReducer = (state:dialogsPage = initialState,action:dispatchActionTypes) => {\r\n     switch (action.type) {\r\n         case 'UPDATE_NEW_MESSAGE_BODY' :\r\n             state.newMessageBody = action.body\r\n             return state\r\n         case 'SEND_MESSAGE':\r\n             let body = state.newMessageBody\r\n             if (body !== '') {\r\n                 state.newMessageBody = ''\r\n                 let newMessage: messageType = {\r\n                     id: 6, message: body,\r\n                 }\r\n                 state.messages.push(newMessage)\r\n             }\r\n             return state\r\n         default :\r\n             return state\r\n     }\r\n}\r\nexport default dialogsReducer","import { dispatchActionTypes, postType, profilePageType} from \"./store\";\r\n\r\n\r\n\r\nexport const addPostActionCreator = ()=> {\r\n    return {\r\n        type: 'ADD-POST'\r\n    } as const\r\n}\r\nexport const updateNewPostTextActionCreator = (text:string) => {\r\n\r\n    return {\r\n        type: 'UPDATE-NEW-POST-TEXT',\r\n        newText:text\r\n    } as const\r\n}\r\nlet initialState = {\r\n    newPostText: '',\r\n    posts: [\r\n        {id: 1, message: 'Hello bro', likeCount: 0},\r\n    ],\r\n}\r\n\r\n const profileReducer = (state:profilePageType = initialState,action:dispatchActionTypes) => {\r\n\r\n     switch(action.type) {\r\n         case 'ADD-POST' :\r\n             if(state.newPostText !== '') {\r\n                 let newPost: postType = {\r\n                     id: 5,\r\n                     message: state.newPostText,\r\n                     likeCount: 0\r\n                 }\r\n                 state.posts.push(newPost);\r\n                 state.newPostText = '';\r\n             }\r\n             return state\r\n         case 'UPDATE-NEW-POST-TEXT' :\r\n             state.newPostText = action.newText\r\n             return state\r\n         default :\r\n             return state\r\n     }\r\n}\r\nexport default profileReducer","import dialogsReducer, {sendMessageCreator, updateNewMessageBodyCreator} from \"./dialogs-reducer\";\r\nimport profileReducer, {addPostActionCreator, updateNewPostTextActionCreator} from \"./profile-reducer\";\r\n\r\n\r\n// let state: stateType = {\r\n//     profilePage: {\r\n//         newPostText: '',\r\n//         posts: [\r\n//             {id: 1, message: 'Hello bro', likeCount: 0},\r\n//         ],\r\n//     },\r\n//     dialogsPage: {\r\n//         dialogs: [\r\n//             {id: 1, name: \"Valentine\", img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'},\r\n//             {id: 2, name: \"Natasha\", img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'},\r\n//             {id: 3, name: \"Abrahima\", img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'},\r\n//         ],\r\n//         messages: [\r\n//             {id: 1, message: 'Hihihihih'},\r\n//             {id: 2, message: 'How is your s ds'},\r\n//             {id: 3, message: 'Hihihihih'},\r\n//         ],\r\n//     },\r\n//     navbarPage: {\r\n//         friends: [\r\n//             {\r\n//                 id: 1,\r\n//                 name: 'Grisha',\r\n//                 img: 'https://i.pinimg.com/originals/ec/a1/18/eca1187492c9ce5ff3b78bf9b9a6ed9a.jpg'\r\n//             },\r\n//             {id: 2, name: 'Misha', img: 'https://i.pinimg.com/originals/ec/a1/18/eca1187492c9ce5ff3b78bf9b9a6ed9a.jpg'},\r\n//             {id: 3, name: 'Sasha', img: 'https://i.pinimg.com/originals/ec/a1/18/eca1187492c9ce5ff3b78bf9b9a6ed9a.jpg'},\r\n//         ]\r\n//     }\r\n// }\r\n// export const addPost = () => {\r\n//     let newPost: postType = {\r\n//         id: 5,\r\n//         message: state.profilePage.newPostText,\r\n//         likeCount: 0\r\n//     }\r\n//     state.profilePage.posts.push(newPost);\r\n//     state.profilePage.newPostText = '';\r\n//     rerenderEntireTree(state);\r\n// }\r\n// export const updateNewPostText = (newText: string) => {\r\n//     state.profilePage.newPostText = newText\r\n//     rerenderEntireTree(state)\r\n// }\r\n// export const subscribe = (observer: (state: stateType) => void) => {\r\n//     rerenderEntireTree = observer\r\n// }\r\n// export default state\r\n\r\nexport type postType = {\r\n    id: number\r\n    message: string|undefined\r\n    likeCount: number\r\n}\r\nexport type dialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n}\r\nexport type messageType = {\r\n    id: number\r\n    message: string|undefined\r\n}\r\nexport type friendsType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n}\r\nexport type profilePageType = {\r\n    newPostText: string|undefined\r\n    posts: postType[]\r\n}\r\nexport type dialogsPage = {\r\n    dialogs: dialogType[]\r\n    messages: messageType[]\r\n    newMessageBody:string|undefined\r\n}\r\nexport type navbarPage = {\r\n    friends: friendsType[]\r\n}\r\nexport type stateType = {\r\n    profilePage: profilePageType\r\n    dialogsPage: dialogsPage\r\n    navbarPage: navbarPage\r\n}\r\n\r\n\r\nexport type dispatchActionTypes =\r\n    ReturnType<typeof addPostActionCreator>\r\n    |ReturnType<typeof updateNewPostTextActionCreator>\r\n    |ReturnType<typeof sendMessageCreator>\r\n    |ReturnType<typeof updateNewMessageBodyCreator>\r\n\r\nexport type storeType = {\r\n    _state:stateType\r\n    _callSubscriber:(_state:stateType)=>void\r\n    getState:() => stateType\r\n    subscribe:(observer: () => void) => void\r\n    dispatch:(action:dispatchActionTypes) => void\r\n}\r\n\r\nexport let store :storeType= {\r\n    _state: {\r\n        profilePage: {\r\n            newPostText: '',\r\n            posts: [\r\n                {id: 1, message: 'Hello bro', likeCount: 0},\r\n            ],\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {\r\n                    id: 1,\r\n                    name: \"Valentine\",\r\n                    img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: \"Natasha\",\r\n                    img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: \"Abrahima\",\r\n                    img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n                },\r\n            ],\r\n            messages: [\r\n                {id: 1, message: 'Hihihihih'},\r\n                {id: 2, message: 'How is your s ds'},\r\n                {id: 3, message: 'Hihihihih'},\r\n            ],\r\n            newMessageBody:''\r\n        },\r\n        navbarPage: {\r\n            friends: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Grisha',\r\n                    img: 'https://i.pinimg.com/originals/ec/a1/18/eca1187492c9ce5ff3b78bf9b9a6ed9a.jpg'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Misha',\r\n                    img: 'https://i.pinimg.com/originals/ec/a1/18/eca1187492c9ce5ff3b78bf9b9a6ed9a.jpg'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Sasha',\r\n                    img: 'https://i.pinimg.com/originals/ec/a1/18/eca1187492c9ce5ff3b78bf9b9a6ed9a.jpg'\r\n                },\r\n            ]\r\n        },\r\n    },\r\n     _callSubscriber : () => {\r\n        console.log('state was changed')\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(observer)  {\r\n        this._callSubscriber = observer\r\n    },\r\n    dispatch(action) {\r\n        this._state.profilePage = profileReducer(this._state.profilePage , action)\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage , action)\r\n        this._callSubscriber(this._state)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default store","import React from \"react\";\r\nimport classes from \"./Header.module.css\"\r\n\r\nconst Header = ()=> {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src=\"https://i.pinimg.com/originals/40/a9/fd/40a9fd835e04c97b9329a48cec0a236e.png\" alt=\"\"/>\r\n        </header>\r\n    )\r\n};\r\nexport default Header;","import React from \"react\";\r\nimport {friendsType} from \"../../../redux/store\";\r\nimport classes from \"./friends.module.css\";\r\n\r\nconst Friends = (props:friendsType) => {\r\n   return (\r\n       <div key={props.id} >\r\n           <img src={props.img} alt=\"\" className={classes.friendAvatar}/>\r\n           <div className={classes.friendName}>{props.name}</div>\r\n       </div>\r\n   )\r\n}\r\nexport default Friends","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {navbarPage, storeType,} from \"../../redux/store\";\r\nimport classes from \"./Navbar.module.css\"\r\nimport Friends from \"./friends/friends\";\r\n\r\n\r\ntype navbarType = {\r\n   store:storeType\r\n}\r\nconst Navbar = (props:navbarType) => {\r\n    let sidebarMap = props.store.getState().navbarPage.friends.map(f => <Friends id={f.id} name={f.name} img={f.img}/>)\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile'\r\n                         activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${classes.item} ${classes.active}`}>\r\n                <NavLink to='/dialogs'\r\n                         activeClassName={classes.active}> Dialogs</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news'\r\n                         activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music'\r\n                         activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings'\r\n                         activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n            <div >\r\n                <NavLink to='/friends' className={classes.friendName}>Friends</NavLink>\r\n                <div className={classes.grid}>{sidebarMap}</div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar","import React from \"react\";\r\nimport classes from \"./Footer.module.css\"\r\nconst Footer = ()=> {\r\n    return (\r\n        <footer className={classes.footer}>\r\n            footer\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer","import React from 'react'\r\nimport classes from './News.module.css';\r\n\r\nconst News = () => {\r\n    return  (\r\n        <div >\r\n            <div className={classes.news}>\r\n                <div className={classes.newsTitle}>News</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React from 'react'\r\n\r\nconst Music = () => {\r\n    return  (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react'\r\n\r\nconst Settings = () => {\r\n    return  (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\"\r\n\r\n\r\nconst ProfileInfo = ()=> {\r\n    return (\r\n        <div >\r\n            <div className={classes.content}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import React from \"react\";\r\nimport { postType } from \"../../../../redux/store\";\r\nimport classes from \"./Post.module.css\"\r\n\r\n\r\n\r\n\r\nconst Post : React.FC<postType> = (props) => {\r\n    return (\r\n        <div className={classes.post} key={props.id}>\r\n                <img className={classes.avatar}\r\n                     src=\"https://image.freepik.com/free-vector/cute-avocado-cartoon-icon_138676-1820.jpg\" alt=\"ss\"/>\r\n            <div className={classes.message}>\r\n                {props.message}\r\n            </div>\r\n\r\n            <div className={classes.like}>\r\n                <button>+</button>\r\n                {props.likeCount}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post","import React, {ChangeEvent} from \"react\";\r\nimport { postType} from \"../../../redux/store\";\r\nimport classes from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype myPostsType = {\r\n    updateNewPostText:(text:string) => void\r\n    addPost:() =>void\r\n    newPostText:string|undefined\r\n    posts: postType[]\r\n}\r\n\r\nconst MyPosts: React.FC<myPostsType> = (props) => {\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.updateNewPostText(text)\r\n    }\r\n\r\n    let postsElement =\r\n        props.posts.map(p => <Post id={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n    return (\r\n        <div className={classes.posts}>\r\n            <div className={classes.createPost}>\r\n                <div className={classes.createPostTitle}>My posts</div>\r\n                <textarea className={classes.createPostArea}\r\n                          value={props.newPostText}\r\n                          onChange={onPostChange}> </textarea>\r\n                <button className={classes.createPostBtn} onClick={onAddPost}>Create new Post</button>\r\n            </div>\r\n            {postsElement}\r\n        </div>\r\n    )\r\n}\r\nexport default MyPosts","import React from \"react\";\r\nimport { storeType} from \"../../../redux/store\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\ntype myPostsType = {\r\n   store:storeType\r\n}\r\n\r\nconst MyPostsCountainer: React.FC<myPostsType> = (props) => {\r\n    let state = props.store.getState()\r\n    let addPost = () => {\r\n            props.store.dispatch(addPostActionCreator())\r\n    }\r\n\r\n    let onPostChange = (text:string) => {\r\n        let action = updateNewPostTextActionCreator(text)\r\n        props.store.dispatch(action)\r\n    }\r\n    return (\r\n       <MyPosts\r\n                updateNewPostText={onPostChange}\r\n                addPost={addPost}\r\n                newPostText={state.profilePage.newPostText}\r\n                posts={state.profilePage.posts}/>\r\n    )\r\n}\r\nexport default MyPostsCountainer","import React from \"react\";\r\nimport classes from \"./Profile.module.css\"\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport  { storeType} from \"../../redux/store\";\r\nimport MyPostsCountainer from \"./MyPosts/MyPostsCountainer\";\r\n\r\n\r\ntype profileType = {\r\n    store:storeType\r\n}\r\n\r\n\r\n\r\nconst Profile: React.FC<profileType> = (props) => {\r\n\r\n    return (\r\n        <div className={classes.profile}>\r\n            <ProfileInfo/>\r\n            <MyPostsCountainer store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nimport classes from \"./DialogItem.module.css\";\r\n\r\ntype DialogItemType = {\r\n    id:number\r\n    img:string\r\n    name:string\r\n}\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={`${classes.dialog} ${classes.active} ${classes.grid}`} >\r\n            <NavLink to={path} ><img src={props.img} alt=\"aa\" className={classes.dialogAvatar}/></NavLink>\r\n            <div className={classes.dialogText}>some text</div>\r\n            <NavLink to={path} activeClassName={classes.active} key={props.id} className={classes.dialogUsername}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport classes from '../Dialogs.module.css';\r\n\r\n\r\ntype messageType = {\r\n    id:number\r\n    message:string|undefined\r\n}\r\n\r\nconst Message : React.FC<messageType>= (props) => {\r\n    return (\r\n        <div className={classes.message} key={props.id}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React, { ChangeEvent } from 'react'\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {dialogsPage} from \"../../redux/store\";\r\n\r\n\r\n\r\ntype DialogPropsType = {\r\n    updateNewMessageBody:(body:string) => void\r\n    sendMessage:() => void\r\n    dialogsPage:dialogsPage\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<DialogPropsType> = (props) => {\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id} img={dialog.img}/>)\r\n    let messagesElements = state.messages\r\n        .map(message => <Message message={message.message} id={message.id}/>)\r\n\r\n    const newMessageBody = state.newMessageBody\r\n\r\n    const onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n    const onNewMessageChange = (e:ChangeEvent<HTMLTextAreaElement>) => {\r\n       let body =  e.currentTarget.value\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <h2 className={classes.dialogsHeader}> Dialogs</h2>\r\n            <div className={classes.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <textarea\r\n                    placeholder='ddddd'\r\n                    value={newMessageBody}\r\n                    onChange={onNewMessageChange}> </textarea>\r\n                <button onClick={onSendMessageClick}>send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs","import React from 'react'\r\n\r\nimport { storeType,} from \"../../redux/store\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\ntype DialogComponentPropsType = {\r\n    store:storeType\r\n}\r\n\r\n\r\nconst DialogsCountainer: React.FC<DialogComponentPropsType> = (props) => {\r\n    let state = props.store.getState().dialogsPage\r\n\r\n\r\n    const onSendMessageClick = () => {\r\n        props.store.dispatch(sendMessageCreator())\r\n    }\r\n    const onNewMessageChange = (body:string) => {\r\n        props.store.dispatch(updateNewMessageBodyCreator(body))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Dialogs    updateNewMessageBody={onNewMessageChange}\r\n                    sendMessage={onSendMessageClick}\r\n                    dialogsPage={state}/>\r\n    )\r\n}\r\nexport default DialogsCountainer","import React from 'react';\nimport './App.css';\nimport Header from \"./conponents/header/Header\";\nimport Navbar from \"./conponents/navbar/Navbar\";\nimport Footer from \"./conponents/footer/Footer\";\nimport { Route} from 'react-router-dom';\nimport News from \"./conponents/News/News\";\nimport Music from './conponents/Music/Music';\nimport Settings from \"./conponents/Settings/Settings\";\nimport Profile from \"./conponents/profile/Profile\";\n\nimport  {storeType} from \"./redux/store\";\n\nimport DialogsCountainer from \"./conponents/dialogs/DialogsCountainer\";\n\n\ntype AppType = {\n    store:storeType\n}\n\nconst App: React.FC<AppType> = (props)  => {\n    return (\n            <div className=\"App\">\n                <Header/>\n                <Navbar store={props.store}/>\n                <div className=\"App-wrapper-content\">\n                    <Route path='/profile'\n                           render={() => <Profile\n                              store={props.store}\n                               />}/>\n                    <Route path='/dialogs'\n                           render={() => <DialogsCountainer\n                              store={props.store}/>}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                </div>\n                <Footer/>\n            </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store, {stateType} from \"./redux/store\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\n\n\n\n let rerenderEntireTree = (state:stateType) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <App store={store}  />\n            </BrowserRouter>\n        </React.StrictMode>,document.getElementById('root')\n    );\n}\n\nrerenderEntireTree(store.getState())\n\nstore.subscribe(()=>{\n    let state = store.getState()\n    rerenderEntireTree(state)\n})\n\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}