{"version":3,"sources":["App.module.scss","redux/profile-reducer/profile-reducer.ts","assets/imagies/icons8-user-male.svg","components/navbar/Navbar.module.scss","redux/dialogs-reducer.ts","components/footer/Footer.module.scss","dal/api.ts","redux/users-reducer.ts","reportWebVitals.ts","components/navbar/Navbar.tsx","components/footer/Footer.tsx","pages/News/News.tsx","pages/Music/Music.tsx","pages/Settings/Settings.tsx","utils/helpers/object-helpers.ts","redux/auth-reducer.ts","components/common/paginaator/Paginator.tsx","pages/users/user/user.tsx","pages/users/Users.tsx","redux/selectors/users-selector.ts","pages/users/usersContainer.tsx","components/header/Header.tsx","redux/app-reducer.ts","components/header/HeaderContainer.tsx","pages/login/loginPage.tsx","redux/redux-store.ts","App.tsx","Hoc/Suspense.tsx","index.tsx","assets/imagies/Bean Eater-1.2s-197px.svg","components/common/Preloader/Preloader.tsx","pages/users/user/user.module.scss","components/common/paginaator/paginator.module.scss","pages/login/loginPage.module.scss","utils/validate/validators.ts","components/common/formsControl/FormsControl.tsx","pages/News/News.module.scss","components/header/Header.module.scss","components/common/formsControl/FormsControl.module.scss"],"names":["module","exports","PROFILE_ACTIONS_TYPE","initialState","posts","id","message","likeCount","profile","status","addPostAC","newPostText","type","ADD_POST","setUserStatus","SET_STATUS","setUserProfile","userId","dispatch","a","usersAPI","getProfileUser","res","data","SET_USERS_PROFILE","getUserStatus","profileAPI","updateUserStatus","resultCode","profileReducer","state","action","newPost","REMOVE_POST","filter","p","postId","DIALOGS_ACTIONS_TYPE","dialogs","name","img","messages","sendMessageCreator","messageText","dialogsReducer","SEND_MESSAGE","newMessage","instance","axios","create","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","follow","post","unfollow","delete","console","log","getUserProfile","put","authAPI","authMe","login","email","password","rememberMe","captcha","logout","USERS_ACTIONS_TYPE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","classes","nav","item","to","activeClassName","active","friendName","grid","Footer","footer","News","news","newsTitle","Music","Settings","updateobjectInArray","items","itemId","objPropName","newObjProps","map","user","AUTH_ACTIONS_TYPE","users","totalUsersCount","isFetching","followingInProgress","followSuccess","FOLLOW","unFollowSuccess","UNFOLLOW","setCurrentPage","SET_CURRENT_PAGE","toggleIsFetching","TOGGLE_IS_FETCHING","toggleFollowingProgress","TOGGLE_IS_FETCHING_PROGRESS","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","SET_USERS","SET_TOTAL_USERS_COUNT","count","Paginator","props","onPageChanged","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","cn","selectedPage","pageNumber","e","User","s","photo","src","photos","small","userWithoutPhoto","alt","disabled","some","Users","style","marginBottom","getUsersSelector","createSelector","usersPage","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","getFollowingInProgressSelector","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","page","totalCount","bind","Header","isAuth","header","loginBlock","setUserData","SET_USER_DATA","payload","getAuthUserData","HeaderContainer","auth","LoginReduxForm","reduxForm","form","error","handleSubmit","onSubmit","Field","placeholder","component","Input","validate","required","display","alignItems","htmlFor","length","stopSubmit","_error","loginPage","loginForm","formData","initialized","rootReducer","combineReducers","profilePage","dialogsPage","app","SET_INITIALIZED_SUCCESS","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","useTypedSelector","useSelector","DialogsContainer","lazy","ProfileContainer","App","WrappedComponent","useDispatch","appState","useEffect","promise","Promise","all","AppWrapperContent","path","render","Suspense","fallback","restProps","AppSamurai","basename","process","ReactDOM","document","getElementById","position","top","left","preloader","value","undefined","maxLengthCreator","symbalLength","FormControl","input","meta","children","Textarea","classNames","fromControl"],"mappings":"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","file":"static/js/main.4743b687.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2ViYR\",\"AppWrapperContent\":\"App_AppWrapperContent__1AhmZ\"};","import {Dispatch} from \"redux\";\r\nimport {profileAPI, userProfileType, usersAPI} from \"../../dal/api\";\r\n\r\nexport type ProfileInitialStateType = typeof initialState\r\nexport enum PROFILE_ACTIONS_TYPE {\r\n    ADD_POST = 'profile-reducer/ADD_POST',\r\n    SET_USERS_PROFILE = 'profile-reducer/SET_USERS_PROFILE',\r\n    SET_STATUS = 'profile-reducer/SET_STATUS',\r\n    REMOVE_POST = 'profile-reducer/REMOVE_POST'\r\n}\r\nexport type postType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello bro', likeCount: 0},\r\n    ] as Array<postType>,\r\n    profile: null as null | userProfileType,\r\n    status: ''\r\n}\r\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: profileActionsType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTIONS_TYPE.ADD_POST : {\r\n            let newPost: postType = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            }\r\n            if (action.newPostText !== '') {\r\n                return {\r\n                    ...state,\r\n                    posts: [...state.posts, newPost],\r\n                }\r\n            }\r\n            return state\r\n        }\r\n        case PROFILE_ACTIONS_TYPE.SET_USERS_PROFILE : {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case PROFILE_ACTIONS_TYPE.SET_STATUS : {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        case PROFILE_ACTIONS_TYPE.REMOVE_POST: {\r\n            return {\r\n                ...state, posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newPostText: string) => ({type:PROFILE_ACTIONS_TYPE.ADD_POST , newPostText} as const)\r\nexport const deletePostAC = (postId: number) => ({type: PROFILE_ACTIONS_TYPE.REMOVE_POST, postId} as const)\r\nexport const setUsersProfileSuccessAC = (profile: userProfileType) => ({type: PROFILE_ACTIONS_TYPE.SET_USERS_PROFILE, profile} as const)\r\nexport const setUserStatus = (status: string) => ({type: PROFILE_ACTIONS_TYPE.SET_STATUS, status} as const)\r\n\r\nexport const setUserProfile = (userId: number) => async (dispatch: Dispatch) => {\r\n    let res = await usersAPI.getProfileUser(userId)\r\n    dispatch(setUsersProfileSuccessAC(res.data))\r\n}\r\n\r\nexport const getUserStatus = (userId: number) => async (dispatch: Dispatch) => {\r\n    let res = await profileAPI.getUserStatus(userId)\r\n    dispatch(setUserStatus(res.data))\r\n\r\n}\r\nexport const updateUserStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    let res = await profileAPI.updateUserStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n}\r\n\r\nexport type profileActionsType =\r\n    | ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof setUsersProfileSuccessAC>\r\n    | ReturnType<typeof setUserStatus>\r\n    | ReturnType<typeof deletePostAC>\r\nexport default profileReducer\r\n\r\n","export default __webpack_public_path__ + \"static/media/icons8-user-male.f6b8195c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2Hiv5\",\"item\":\"Navbar_item__15YHG\",\"grid\":\"Navbar_grid__8vpHI\"};","\r\nexport enum DIALOGS_ACTIONS_TYPE{\r\n    SEND_MESSAGE = 'SEND_MESSAGE',\r\n}\r\n\r\nexport type dialogType = { id: number, name: string, img: string }\r\nexport type messageType = { id: number, message: string }\r\nexport type DialogsPageStateType = typeof initialState\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Valentine\",\r\n            img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Natasha\",\r\n            img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Misha\",\r\n            img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n        },\r\n    ] as dialogType[],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your s ds'},\r\n        {id: 3, message: 'Hi'},\r\n    ] as messageType[],\r\n}\r\n\r\nexport type dialogsActionsType = ReturnType<typeof sendMessageCreator>\r\n\r\nexport const sendMessageCreator = (messageText:string) => ({type: 'SEND_MESSAGE',messageText}as const )\r\n\r\nconst dialogsReducer = (state: DialogsPageStateType = initialState, action: dialogsActionsType): DialogsPageStateType => {\r\n\r\n    switch (action.type) {\r\n        case DIALOGS_ACTIONS_TYPE.SEND_MESSAGE: {\r\n            let newMessage: messageType = {id: 6, message: action.messageText}\r\n            if (action.messageText !== '') {\r\n                return {\r\n                    ...state,\r\n                    messages: [...state.messages, newMessage]\r\n                }\r\n            }\r\n            return state\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1Q6Pd\"};","import axios from \"axios\";\r\n\r\nexport type userResponseType = {\r\n    items : userType[]\r\n    totalCount: number\r\n    error: string\r\n}\r\nexport interface ResponseType<T = {}> {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: T\r\n}\r\nexport type userType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    followed: boolean\r\n}\r\nexport type authDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\nexport type userProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string\r\n        website: string\r\n        vk: string\r\n        twitter: string\r\n        instagram: string\r\n        youtube: string\r\n        github: string\r\n        mainLink: string\r\n    }\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'f1483392-45ca-4f41-b8a9-ec8e05304fe6'\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n        return instance.get<userResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<ResponseType<userType>>(`follow/${userId}`)\r\n    },\r\n    // maybe refactor\r\n    unfollow(userId: number) {\r\n        return instance.delete<ResponseType>(`follow/${userId}`)\r\n    },\r\n\r\n    getProfileUser(userId: number) {\r\n        console.log('Please use profileAPI ti get users.')\r\n        return profileAPI.getUserProfile(userId)\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<userProfileType>(`profile/${userId}`)\r\n    },\r\n    getUserStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateUserStatus(status: string) {\r\n        return instance.put<ResponseType<userType>>(`profile/status`, {\r\n            status: status\r\n        })\r\n    }\r\n\r\n}\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<ResponseType<authDataType>>(`auth/me`)\r\n    },\r\n    login(email:string,password:string,rememberMe:boolean=false,captcha:boolean) {\r\n        return instance.post<ResponseType<{userId:number}>>(`auth/login` , {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete<ResponseType>(`auth/login`)\r\n    }\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {usersAPI, userType} from \"../dal/api\";\r\nimport { AppThunk} from \"./redux-store\";\r\nimport {updateobjectInArray} from \"../utils/helpers/object-helpers\";\r\n\r\ntype UsersStateType = typeof initialState\r\nexport enum USERS_ACTIONS_TYPE {\r\n    FOLLOW = 'user-reducer/FOLLOW',\r\n    UNFOLLOW = 'user-reducer/UNFOLLOW',\r\n    SET_USERS = 'user-reducer/SET_USERS',\r\n    SET_CURRENT_PAGE = 'user-reducer/SET_CURRENT_PAGE',\r\n    SET_TOTAL_USERS_COUNT = 'user-reducer/SET_TOTAL_USERS_COUNT',\r\n    TOGGLE_IS_FETCHING = 'user-reducer/TOGGLE_IS_FETCHING',\r\n    TOGGLE_IS_FETCHING_PROGRESS = 'user-reducer/TOGGLE_IS_FETCHING_PROGRESS'\r\n}\r\n\r\nexport type serverUsers = {\r\n    users: userType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as userType[],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as number[]\r\n}\r\n\r\n\r\nexport const followSuccess = (userId: number) => ({type: USERS_ACTIONS_TYPE.FOLLOW, userId}) as const\r\nexport const unFollowSuccess = (userId: number) => ({type: USERS_ACTIONS_TYPE.UNFOLLOW, userId}) as const\r\nexport const setUsers = (users: userType[]) => ({type: USERS_ACTIONS_TYPE.SET_USERS, users}) as const\r\nexport const setCurrentPage = (currentPage: number) => ({type: USERS_ACTIONS_TYPE.SET_CURRENT_PAGE, currentPage}) as const\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: USERS_ACTIONS_TYPE.SET_TOTAL_USERS_COUNT, count: totalUsersCount}) as const\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: USERS_ACTIONS_TYPE.TOGGLE_IS_FETCHING, isFetching: isFetching}) as const\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: USERS_ACTIONS_TYPE.TOGGLE_IS_FETCHING_PROGRESS, isFetching, userId}) as const\r\n\r\nexport const usersReducer = (state: UsersStateType = initialState, action: userActionsType): UsersStateType => {\r\n    switch (action.type) {\r\n        case USERS_ACTIONS_TYPE.FOLLOW :\r\n            return {\r\n                ...state,\r\n                users:updateobjectInArray(state.users,action.userId,'id',{followed:true})\r\n            }\r\n        case USERS_ACTIONS_TYPE.UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateobjectInArray(state.users,action.userId,'id',{followed: false})\r\n            }\r\n        case USERS_ACTIONS_TYPE.SET_USERS : {\r\n            return {...state, users: action.users}\r\n        }\r\n        case  USERS_ACTIONS_TYPE.SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case USERS_ACTIONS_TYPE.SET_TOTAL_USERS_COUNT : {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case USERS_ACTIONS_TYPE.TOGGLE_IS_FETCHING : {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case USERS_ACTIONS_TYPE.TOGGLE_IS_FETCHING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const requestUsers = (page: number, pageSize: number): AppThunk => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n\r\n    let res = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(res.data.items))\r\n    dispatch(setTotalUsersCount(res.data.totalCount))\r\n}\r\nconst followUnfollowFlow = async (dispatch : Dispatch, userId:number,apiMethod:any,actionCreator:any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let res = await apiMethod(userId)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number): AppThunk => async (dispatch: Dispatch) => {\r\n    followUnfollowFlow(dispatch,userId,usersAPI.follow.bind(usersAPI),followSuccess)\r\n}\r\nexport const unfollow = (userId: number):AppThunk => async (dispatch: Dispatch) => {\r\n    followUnfollowFlow(dispatch,userId,usersAPI.unfollow.bind(usersAPI),unFollowSuccess)\r\n}\r\n\r\n\r\nexport type userActionsType =\r\n    ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unFollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleFollowingProgress>\r\nexport default usersReducer","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Navbar.module.scss\"\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    // let sidebarMap = props.store.getState().navbarPage.friends.map(f => <Friends id={f.id} name={f.name} img={f.img}/>)\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile'\r\n                         activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/users'\r\n                         activeClassName={classes.active}>Users</NavLink>\r\n            </div>\r\n            <div className={`${classes.item} ${classes.active}`}>\r\n                <NavLink to='/dialogs'\r\n                         activeClassName={classes.active}> Dialogs</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news'\r\n                         activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music'\r\n                         activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings'\r\n                         activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n            <div >\r\n                <NavLink to='/friends' className={classes.friendName}>Friends</NavLink>\r\n                <div className={classes.grid}>{/*{sidebarMap}*/} </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar\r\n","import React from \"react\";\r\nimport classes from \"./Footer.module.scss\"\r\nconst Footer = ()=> {\r\n    return (\r\n        <footer className={classes.footer}>\r\n            footer\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer\r\n","import React from 'react'\r\nimport classes from './News.module.scss';\r\n\r\nconst News = () => {\r\n    return  (\r\n        <div >\r\n            <div className={classes.news}>\r\n                <div className={classes.newsTitle}>News</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default News\r\n","import React from 'react'\r\n\r\nconst Music = () => {\r\n    return  (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react'\r\n\r\nconst Settings = () => {\r\n    return  (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import {userType} from \"../../dal/api\";\r\n\r\nexport const updateobjectInArray = (items:userType[],itemId:number,objPropName:string,newObjProps:any) => {\r\n    return items.map((user:any) => {\r\n        if (user[objPropName] === itemId) {\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user\r\n    })\r\n}","import {authAPI} from \"../dal/api\";\r\nimport {AppThunk} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n    SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA',\r\n}\r\n\r\n\r\ntype AuthStateType = typeof initialState\r\nlet initialState = {\r\n    userId: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    isAuth: false\r\n}\r\nexport type authActionTypes =   ReturnType<typeof setUserData>\r\n\r\nexport const setUserData = (userId:number| null,email:string | null,login:string |null,isAuth:boolean) => ({\r\n    type:AUTH_ACTIONS_TYPE.SET_USER_DATA,payload:{userId,email,login,isAuth}} as const )\r\n\r\nexport const getAuthUserData = ():AppThunk => async (dispatch) => {\r\n       const res = await authAPI.authMe()\r\n        if (res.data.resultCode === 0) {\r\n            let {id, email, login} = res.data.data\r\n            dispatch(setUserData(id, email, login,true))\r\n        }\r\n        return res\r\n}\r\nexport const login = (email:string,password:string,rememberMe:boolean,captcha:boolean):AppThunk =>  async (dispatch) => {\r\n\r\n    let res = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else  {\r\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : 'some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const logout = ():AppThunk =>  async (dispatch) => {\r\n    let res = await authAPI.logout()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null,false))\r\n    }\r\n}\r\n\r\n\r\nexport const authReducer = (state: AuthStateType = initialState, action: authActionTypes): AuthStateType => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPE.SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React, {FC, useState} from 'react'\r\nimport cn from \"classnames\";\r\nimport styles from './paginator.module.scss'\r\n\r\ninterface PaginatorPropsType {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    onPageChanged: (p: number) => void\r\n    currentPage: number\r\n    portionSize: number\r\n}\r\n\r\nexport const Paginator: FC<PaginatorPropsType> = props => {\r\n    let {pageSize, currentPage, totalUsersCount, onPageChanged, portionSize} = props\r\n    let pageCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pageCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}> {'<'} </button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={cn({\r\n                        [styles.selectedPage]: currentPage === p\r\n                    }, styles.pageNumber)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>{'>'}</button>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {FC} from 'react'\r\nimport s from \"./user.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userWithoutPhoto from \"../../../assets/imagies/icons8-user-male.svg\";\r\nimport {userType} from \"../../../dal/api\";\r\n\r\ninterface userProps {\r\n    user: userType\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const User: FC<userProps> = ({user, follow, unfollow, followingInProgress}) => {\r\n    return (\r\n        <div key={user.id} className={s.grid}>\r\n            <NavLink to={`/profile/${user.id} `}>\r\n                <img className={s.photo}\r\n                     src={user.photos.small !== null\r\n                         ? user.photos.small\r\n                         : userWithoutPhoto}\r\n                     alt='animated-user'/>\r\n            </NavLink>\r\n\r\n            <div className={s.follow}>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }}>\r\n                        follow</button>}\r\n            </div>\r\n            <div className={s.name}>{user.name}</div>\r\n            <div className={s.status}>{user.status}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {FC} from \"react\";\r\nimport {userType} from \"../../dal/api\";\r\nimport {Paginator} from \"../../components/common/paginaator/Paginator\";\r\nimport {User} from \"./user/user\";\r\n\r\n\r\ntype usersPropsType = {\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users:userType[]\r\n    pageSize: number\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\nexport const Users: FC<usersPropsType> = props => {\r\n    const {\r\n        users,\r\n        currentPage,\r\n        pageSize,\r\n        totalUsersCount,\r\n        onPageChanged,\r\n        followingInProgress,\r\n        follow,\r\n        unfollow,\r\n    } = props\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{marginBottom: '20px'}}>\r\n                <Paginator\r\n                    pageSize={pageSize}\r\n                    totalUsersCount={totalUsersCount}\r\n                    onPageChanged={onPageChanged}\r\n                    currentPage={currentPage}\r\n                    portionSize={5}\r\n                    />\r\n            </div>\r\n            {users.map(user => {\r\n                return <User follow={follow} followingInProgress={followingInProgress} unfollow={unfollow} user={user}/>\r\n            })}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n","import { AppRootStateType } from \"../redux-store\"\r\n//@ts-ignore\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state:AppRootStateType) => {\r\n    return state.usersPage.users\r\n}\r\n//@ts-ignore\r\nexport const getUsersSelector = createSelector(getUsers,(users)=> {\r\n    return users\r\n})\r\nexport const getPageSizeSelector = (state:AppRootStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCountSelector = (state:AppRootStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPageSelector = (state:AppRootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetchingSelector = (state:AppRootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgressSelector = (state:AppRootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../components/common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {userType} from \"../../dal/api\";\r\nimport {getCurrentPageSelector,\r\n    getFollowingInProgressSelector,\r\n    getIsFetchingSelector,\r\n    getPageSizeSelector, getTotalUsersCountSelector, getUsersSelector } from \"../../redux/selectors/users-selector\";\r\n\r\ntype MapStatePropsType = {\r\n    users: userType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress:number[]\r\n}\r\ntype MapDispatchToProps = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    requestUsers:(currentPage:number,pageSize:number) => void\r\n}\r\nexport type UsersApiComponentPropsType = MapStatePropsType & MapDispatchToProps\r\n\r\nexport class UsersContainer extends React.Component<UsersApiComponentPropsType> {\r\n    componentDidMount() {\r\n        const {currentPage,pageSize} = this.props\r\n       this.props.requestUsers(currentPage,pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber,pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching &&\r\n            <Preloader/>}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followingInProgress:getFollowingInProgressSelector(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,\r\n        {\r\n            setCurrentPage,requestUsers,follow,unfollow\r\n        })\r\n)(UsersContainer)","import React, {FC} from \"react\";\r\nimport classes from \"./Header.module.scss\"\r\nimport {MemoryRouter, NavLink} from 'react-router-dom'\r\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\r\n\r\n\r\n\r\nconst Header: FC<HeaderContainerPropsType> = props => {\r\n    const {\r\n        login,\r\n        isAuth,\r\n        logout\r\n    } = props\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src=\"https://i.pinimg.com/originals/40/a9/fd/40a9fd835e04c97b9329a48cec0a236e.png\" alt=\"animated-boy\"/>\r\n            <>\r\n                {isAuth\r\n                    ? <div className={classes.loginBlock}>\r\n                        {login}\r\n                        <button onClick={logout}>logout</button>\r\n                    </div>\r\n                    :\r\n                            <NavLink to='/login'>Login</NavLink>\r\n                }\r\n            </>\r\n        </header>\r\n    )\r\n};\r\nexport default Header;\r\n","\r\nimport {AppThunk} from \"./redux-store\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nexport enum AUTH_ACTIONS_TYPE {\r\n    SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS',\r\n}\r\n\r\n\r\nexport type AppStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    initialized:false\r\n}\r\nexport type appActionTypes =   ReturnType<typeof initializedSuccess>\r\n\r\nexport const initializedSuccess = () => ({\r\n    type:'SET_INITIALIZED_SUCCESS'} as const )\r\n\r\nexport const initializeApp = ():AppThunk => async (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    await Promise.all([promise])\r\n    dispatch(initializedSuccess())\r\n}\r\n\r\n\r\n\r\nexport const appReducer = (state: AppStateType = initialState, action: appActionTypes): AppStateType => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPE.SET_INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport {log} from \"util\";\r\n\r\nexport type HeaderContainerPropsType = MapStatePropsType & MapDispatchToProps\r\ntype MapDispatchToProps = {\r\n    logout:() => void\r\n}\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\nexport default connect(mapStateToProps,{logout}) (HeaderContainer)","import React, {FC} from 'react'\r\nimport classes from './loginPage.module.scss'\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport { required } from \"../../utils/validate/validators\";\r\nimport  {reduxForm,Field, InjectedFormProps } from 'redux-form';\r\nimport { Input } from '../../components/common/formsControl/FormsControl';\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ninterface mapDspatchToProps  {\r\n    login:(email:string,password:string,rememberMe:boolean,captcha:boolean) => void\r\n}\r\ninterface MapStateToPropsType {\r\n    isAuth:boolean\r\n}\r\ntype propsType = mapDspatchToProps & MapStateToPropsType\r\ninterface formDataType {\r\n    email:string\r\n    password:string\r\n    rememberMe:boolean\r\n}\r\n const LoginForm:FC<InjectedFormProps<formDataType>> = ({error,handleSubmit,...props}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field  placeholder={'email'} component={Input} name={'email'} validate={[required]}/>\r\n            <Field  placeholder={'password'} component={Input} name={'password'} validate={[required]}/>\r\n            <div style={{display:\"flex\",alignItems:\"center\"}}>\r\n                <Field type=\"checkbox\" component={'input'} name={'rememberMe'} />\r\n                <label htmlFor=\"{'rememberMe'}\">remember me</label>\r\n            </div>\r\n            {error && <div className={classes.error}>{error}</div>}\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n  const Login:FC<propsType> = (props) => {\r\n    const onSubmit= (formData:formDataType) => {\r\n        props.login(formData.email,formData.password,formData.rememberMe,false)\r\n     }\r\n    if(props.isAuth) {\r\n        return <Redirect to={`/profile`}/>\r\n    }\r\n    return (\r\n        <div className={classes.loginPage}>\r\n            <h1>Login</h1>\r\n            <div className={classes.loginForm}>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n const LoginReduxForm = reduxForm<formDataType>({\r\n    form:'login'\r\n})(LoginForm)\r\n\r\nconst MapStateToProps = (state:AppRootStateType ):MapStateToPropsType => {\r\n    return {\r\n        isAuth:state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(MapStateToProps ,{login})(Login)\r\n","import {applyMiddleware, combineReducers} from \"redux\";\r\nimport {createStore} from \"redux\";\r\n\r\nimport dialogsReducer, {dialogsActionsType} from \"./dialogs-reducer\";\r\nimport usersReducer, {userActionsType} from \"./users-reducer\";\r\nimport {authActionTypes, authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\n\r\nimport {FormAction, reducer as formReducer} from 'redux-form'\r\nimport {appActionTypes, appReducer} from \"./app-reducer\";\r\nimport {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport profileReducer, {profileActionsType} from \"./profile-reducer/profile-reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\nexport type AllActionsType =\r\n    authActionTypes\r\n    | userActionsType\r\n    | dialogsActionsType\r\n    | profileActionsType\r\n    | FormAction\r\n    | appActionTypes\r\n//thunk type\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AllActionsType>\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(thunkMiddleware),\r\n    // other store enhancers if any\r\n));\r\nexport const useTypedSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n// (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\nexport default store\r\n","import React, {useEffect} from 'react';\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport News from \"./pages/News/News\";\r\nimport Music from './pages/Music/Music';\r\nimport Settings from \"./pages/Settings/Settings\";\r\nimport UsersContainer from './pages/users/usersContainer';\r\nimport HeaderContainer from \"./components/header/HeaderContainer\";\r\nimport Login from \"./pages/login/loginPage\";\r\nimport {Provider, useDispatch} from \"react-redux\";\r\nimport store, { useTypedSelector} from \"./redux/redux-store\";\r\nimport {AppStateType, initializeApp} from \"./redux/app-reducer\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport classes from './App.module.scss'\r\nimport {withSuspense} from \"./Hoc/Suspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./pages/dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./pages/profile/ProfileContainer'))\r\n\r\n  const App = () =>  {\r\n        const dispatch = useDispatch()\r\n        const appState = useTypedSelector<AppStateType>((state) => state.app)\r\n\r\n        useEffect(() => {\r\n            dispatch(initializeApp())\r\n        },[])\r\n        if (!appState.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className={classes.App}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={classes.AppWrapperContent}>\r\n                    <Route path='/profile/:userId?'\r\n                           render={() =><React.Suspense fallback={<div>loading</div>}>\r\n                               <ProfileContainer/>\r\n                           </React.Suspense> }/>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}/>\r\n\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path='/login'\r\n                           render={() => <Login/>}/>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n     const AppSamurai = (props:any) => {\r\n      return  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Provider store={store}>\r\n              <App/>\r\n          </Provider>\r\n      </BrowserRouter>\r\n    }\r\nexport default AppSamurai\r\n\r\n","import React from 'react'\r\nimport { Preloader } from '../components/common/Preloader/Preloader'\r\n\r\n\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: any) => {\r\n        let {...restProps} = props\r\n        return (\r\n            <React.Suspense fallback={<Preloader/>}>\r\n                <WrappedComponent {...restProps as WCP}/>\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from \"react-dom\";\r\nimport AppSamurai from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <AppSamurai/>\r\n    , document.getElementById('root')\r\n)\r\n\r\n\r\nreportWebVitals();\r\n","export default __webpack_public_path__ + \"static/media/Bean Eater-1.2s-197px.a9528d09.svg\";","import preloader from \"../../../assets/imagies/Bean Eater-1.2s-197px.svg\";\r\nimport React, {FC} from \"react\";\r\ntype PreloaderPropsType = {\r\n\r\n}\r\n\r\nexport const Preloader:FC<PreloaderPropsType> = () => {\r\n    return (\r\n        <img style={{position: 'absolute', top: '40%', left: '50%'}}\r\n             src={preloader} alt=\"Packman\"\r\n        />\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"user_grid__3gtEy\",\"photo\":\"user_photo__ebGEt\",\"follow\":\"user_follow__2wrc5\",\"name\":\"user_name__28Q3w\",\"status\":\"user_status__V8U8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginator_paginator__Sa3M6\",\"pageNumber\":\"paginator_pageNumber__1bgt9\",\"selectedPage\":\"paginator_selectedPage__3kZu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"loginPage_loginPage__1_h6c\",\"loginForm\":\"loginPage_loginForm__2t5_t\",\"error\":\"loginPage_error__DTbO0\"};","\r\n\r\nexport const required = (value:string) => {\r\n  return   value? undefined : 'field is req'\r\n}\r\n\r\nexport const maxLengthCreator = (symbalLength:number) => {\r\n    return (value: string) => {\r\n        if (value.length > symbalLength) {\r\n            return `max length is ${symbalLength} symbols`\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n}","import React, {FC} from 'react'\r\nimport { WrappedFieldProps} from 'redux-form'\r\nimport classes from './FormsControl.module.scss'\r\nimport classNames from \"classnames\";\r\n\r\ninterface CustomFieldProps {\r\n    type?: string;\r\n}\r\n\r\n\r\nexport const FormControl:FC<WrappedFieldProps & CustomFieldProps > = ({input,meta,...props}) => {\r\n    return (\r\n        <>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\nexport const Textarea:FC<WrappedFieldProps & CustomFieldProps> = props => {\r\n    const {children,input,meta,...restProps} = props\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} className={classNames(classes.fromControl)}/> </FormControl>\r\n}\r\n\r\nexport const Input:FC<WrappedFieldProps & CustomFieldProps> = props => {\r\n    const {children,input,meta,...restProps} = props\r\n    return <FormControl {...props}> <input {...input} {...restProps} className={classNames(classes.fromControl)}/></FormControl>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__GIMR0\",\"newsTitle\":\"News_newsTitle__2k2zU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__DD6E0\",\"loginBlock\":\"Header_loginBlock__19TG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fromControl\":\"FormsControl_fromControl__3sRIO\",\"error\":\"FormsControl_error__3EpZl\",\"invalidText\":\"FormsControl_invalidText__3-5i4\"};"],"sourceRoot":""}