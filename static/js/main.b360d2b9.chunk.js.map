{"version":3,"sources":["components/profile/Profile.module.scss","components/navbar/Navbar.module.scss","redux/reducers/dialog-reducer/dialogs-reducer.ts","components/navbar/Navbar.tsx","components/footer/Footer.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/dialogs/DialogItem/DialogsItem.tsx","components/dialogs/Message/Message.tsx","components/dialogs/Dialogs.tsx","hoc/authRedirectComponent.tsx","components/dialogs/DialogsContainer.tsx","redux/reducers/user-reducer/users-reducer.ts","api/api.ts","redux/reducers/profile-reducer/profile-reducer.ts","assets/designer.svg","components/users/paginator.tsx","components/users/Users.tsx","assets/Gear-0.6s-201px.svg","components/preloader/preloader.tsx","components/users/UsersContainer.tsx","redux/reducers/authReducer/authReducer.ts","components/profile/MyPosts/Post/Post.tsx","components/profile/MyPosts/MyPosts.tsx","components/profile/MyPosts/MyPostsCountainer.tsx","assets/profile-cover.jpg","components/profile/ProfileInfo/profileStatus/ProfileStatus.tsx","components/profile/ProfileInfo/ProfileInfo.tsx","components/profile/Profile.tsx","components/profile/ProfileContainer.tsx","components/header/Header.tsx","components/header/HeaderContainer.tsx","components/login/login.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/dialogs/DialogItem/DialogItem.module.css","components/dialogs/Dialogs.module.css","components/header/Header.module.scss","components/profile/MyPosts/MyPosts.module.scss","components/profile/MyPosts/Post/Post.module.css","components/profile/ProfileInfo/ProfileInfo.module.scss","components/users/paginatio.module.scss","components/login/loginForm.module.scss","App.module.scss","components/footer/Footer.module.scss","components/News/News.module.scss","components/users/Users.module.scss"],"names":["module","exports","DIALOGS_ACTIONS_TYPE","Navbar","className","classes","nav","sidebar","item","to","activeClassName","active","sidebarFriends","Footer","footer","footerList","News","news","newsTitle","Music","Settings","initialState","dialogs","id","name","img","messages","message","newMessageBody","dialogsReducer","state","action","type","UPDATE_NEW_MESSAGE_BODY","body","SEND_MESSAGE","newMessage","DialogItem","props","path","dialog","grid","src","alt","dialogAvatar","dialogText","dialogUsername","Message","Dialogs","dialogsPage","dialogsElements","map","messagesElements","dialogsHeader","dialogItems","placeholder","value","onChange","e","currentTarget","updateNewMessageBody","onClick","sendMessage","mstp","isAuth","auth","WithAuthRedirect","Component","connect","rest","ACTION_USER_REDUCER","compose","dispatch","updateNewMessageBodyCreator","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","userId","post","delete","profileAPI","status","put","authAPI","ACTION_PROFILE_REDUCER","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setCurrentPage","page","toggleIsFetching","toggleFollowing","Paginator","onPageChanged","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","filter","p","cn","selectedPage","pageNumber","Users","usersMap","u","photos","small","userWithoutPhoto","followed","disabled","some","unFollow","follow","pageNumbers","Preloader","preloader","UsersContainer","getUsers","this","unfollow","React","usersPage","a","res","data","items","totalCount","resultCode","ACTION_AUTH_REDUCER","setUserStatus","newPostText","posts","likeCount","profile","Post","avatar","like","MyPosts","postsElement","createPost","createPostTitle","createPostArea","text","updateNewPostText","createPostBtn","addPost","MyPostsCountainer","profilePage","newText","ProfileStatus","editMode","setEditMode","setText","useEffect","onBlur","updateUserStatus","autoFocus","onDoubleClick","ProfileInfo","profileInfoBlock","profileInfoBlock__img","mountains","imageBock","large","fullName","Profile","ProfileContainer","Number","match","params","setUsersProfile","getUserStatus","withRouter","Header","login","header","navBurger","burger","htmlFor","logo","header_loginBlock","register","href","target","email","setAuthUserData","payload","HeaderContainer","getAuthUserData","Login","loginPage","title","LoginReduxForm","onSubmit","formData","console","log","reduxForm","form","loginPage__form","handleSubmit","Field","component","App","AppWrapperContent","render","DialogsContainer","rootReducer","combineReducers","ADD_POST","newPost","UPDATE_NEW_POST_TEXT","SET_USERS_PROFILE","SET_USER_STATUS","FOLLOW","UN_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOWING_IN_PROGRESS","SET_USER_DATA","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b360d2b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__I77Zu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__36Uaj\",\"sidebar\":\"Navbar_sidebar__3oxn6\",\"item\":\"Navbar_item__3MEIe\",\"active\":\"Navbar_active__DqdFb\",\"sidebarFriends\":\"Navbar_sidebarFriends__3aZLr\"};","export enum DIALOGS_ACTIONS_TYPE{\r\n    SEND_MESSAGE = 'SEND_MESSAGE',\r\n    UPDATE_NEW_MESSAGE_BODY='UPDATE_NEW_MESSAGE_BODY'\r\n}\r\nexport type dialogType = { id: number , name: string ,img: string }\r\nexport type messageType = { id: number , message: string  }\r\n\r\nexport type DialogsPageStateType  = typeof initialState\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Valentine\",\r\n            img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n        } ,\r\n        {\r\n            id: 2,\r\n            name: \"Natasha\",\r\n            img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Abrahima\",\r\n            img: 'https://ih1.redbubble.net/image.1005447779.9765/flat,750x1000,075,f.jpg'\r\n        },\r\n    ] as dialogType[],\r\n    messages: [\r\n        {id: 1, message: 'Hihihihih'},\r\n        {id: 2, message: 'How is your s ds'},\r\n        {id: 3, message: 'Hihihihih'},\r\n    ] as messageType[],\r\n    newMessageBody:''\r\n}\r\nexport type dialogsActionsType =\r\n    | ReturnType<typeof sendMessageCreator>\r\n    | ReturnType<typeof updateNewMessageBodyCreator>\r\n\r\nexport const sendMessageCreator = () => ({type: 'SEND_MESSAGE'}as const)\r\nexport const updateNewMessageBodyCreator = (body:string) =>  ({type: 'UPDATE_NEW_MESSAGE_BODY', body:body}as const)\r\n\r\n export const dialogsReducer = (state:DialogsPageStateType  = initialState,action:dialogsActionsType):DialogsPageStateType  => {\r\n     switch (action.type) {\r\n         case DIALOGS_ACTIONS_TYPE.UPDATE_NEW_MESSAGE_BODY :\r\n             return {...state , newMessageBody : action.body}\r\n         case DIALOGS_ACTIONS_TYPE.SEND_MESSAGE:\r\n             let body = state.newMessageBody\r\n             let newMessage: messageType = {\r\n             id: 6, message: body,\r\n         }\r\n         if(body !== '') {\r\n             return {\r\n                 ...state,\r\n                 newMessageBody: '',\r\n                 messages: [...state.messages,newMessage]\r\n             }\r\n         }\r\n         return state\r\n\r\n         default :\r\n             return state\r\n     }\r\n}\r\nexport default dialogsReducer","import React, {FC} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Navbar.module.scss\"\r\n\r\ntype navbarType = {\r\n\r\n}\r\nconst Navbar:FC<navbarType> = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <ul className={classes.sidebar}>\r\n                <li className={classes.item}>\r\n                    <NavLink to='/profile'\r\n                            activeClassName={classes.active}>Profile</NavLink>\r\n                </li>\r\n                <li className={`${classes.item} ${classes.active}`}>\r\n                    <NavLink to='/dialogs'\r\n                             activeClassName={classes.active}> Messages</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                        <NavLink to='/users' activeClassName={classes.active}>Users</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to='/news'\r\n                             activeClassName={classes.active}>News</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to='/music'\r\n                             activeClassName={classes.active}>Music</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to='/settings'\r\n                             activeClassName={classes.active}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n            <ul className={classes.sidebarFriends}>\r\n                <h3>Friends</h3>\r\n                <li>Lorem ipsum.</li>\r\n                <li>Itaque, neque?</li>\r\n                <li>Ipsa, repellat!</li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar","import React from \"react\";\r\nimport classes from \"./Footer.module.scss\"\r\nconst Footer = ()=> {\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <ul className={classes.footerList}>\r\n                <li>About</li>\r\n                <li>Blog</li>\r\n                <li>Careers</li>\r\n                <li>Support</li>\r\n                <li>Contact Us</li>\r\n            </ul>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer","import React from 'react'\r\nimport classes from './News.module.scss';\r\n\r\nconst News = () => {\r\n    return  (\r\n        <div >\r\n            <div className={classes.news}>\r\n                <div className={classes.newsTitle}>News</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React from 'react'\r\n\r\nconst Music = () => {\r\n    return  (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react'\r\n\r\nconst Settings = () => {\r\n    return  (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nimport classes from \"./DialogItem.module.css\";\r\n\r\ntype DialogItemType = {\r\n    id:number\r\n    img:string\r\n    name:string\r\n}\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={`${classes.dialog} ${classes.active} ${classes.grid}`} >\r\n            <NavLink to={path} ><img src={props.img} alt=\"aa\" className={classes.dialogAvatar}/></NavLink>\r\n            <div className={classes.dialogText}>some text</div>\r\n            <NavLink to={path} activeClassName={classes.active} key={props.id} className={classes.dialogUsername}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport classes from '../Dialogs.module.css';\r\n\r\n\r\ntype messageType = {\r\n    id:number\r\n    message:string|undefined\r\n}\r\n\r\nconst Message : React.FC<messageType>= (props) => {\r\n    return (\r\n        <div className={classes.message} key={props.id}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React, { ChangeEvent } from 'react'\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id} img={dialog.img} key={dialog.id}/>)\r\n    let messagesElements = state.messages\r\n        .map(message => <Message message={message.message} id={message.id} key={message.id}/>)\r\n\r\n    const newMessageBody = state.newMessageBody\r\n\r\n    const onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n    const onNewMessageChange = (e:ChangeEvent<HTMLTextAreaElement>) => {\r\n       let body =  e.currentTarget.value\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <h2 className={classes.dialogsHeader}> Messages</h2>\r\n            <div className={classes.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <textarea\r\n                    placeholder='ddddd'\r\n                    value={newMessageBody}\r\n                    onChange={onNewMessageChange}> </textarea>\r\n                <button onClick={onSendMessageClick}>send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs","import React, {ComponentType} from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\ntype mapStateToProps = {\r\n    isAuth:boolean\r\n}\r\n\r\nconst mstp = (state:AppStateType) : mapStateToProps => {\r\n    return {\r\n        isAuth:state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function WithAuthRedirect <T>(Component:ComponentType<T>)  {\r\n    const RedirectComponent = (props:mapStateToProps) => {\r\n        let {isAuth,...rest} = props\r\n        if (!props.isAuth){\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n        return <Component {...rest as T}/>\r\n    }\r\n\r\n\r\n    return connect(mstp)(RedirectComponent)\r\n}","import React from 'react'\r\nimport {\r\n    DialogsPageStateType,\r\n    sendMessageCreator,\r\n    updateNewMessageBodyCreator\r\n} from \"../../redux/reducers/dialog-reducer/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport { AppStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch } from 'redux';\r\nimport {WithAuthRedirect} from \"../../hoc/authRedirectComponent\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage:DialogsPageStateType\r\n}\r\ntype MapDispatchPropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: () => void\r\n}\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state:AppStateType) : MapStatePropsType => {\r\n    return {\r\n        dialogsPage:state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):MapDispatchPropsType => {\r\n    return {\r\n        updateNewMessageBody: (body: string) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    WithAuthRedirect,\r\n)(Dialogs)","import {usersAPI, userType} from \"../../../api/api\";\r\nimport {AppThunk} from \"../../redux-store\";\r\n\r\n\r\nexport type serverUsers = {\r\n    users: userType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n}\r\n\r\ntype UsersStateType = typeof initialState\r\n\r\nenum ACTION_USER_REDUCER {\r\n    FOLLOW = 'FOLLOW',\r\n    UN_FOLLOW = 'UN_FOLLOW',\r\n    SET_USERS = 'SET_USERS',\r\n    SET_CURRENT_PAGE = 'SET_CURRENT_PAGE',\r\n    SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT',\r\n    TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING',\r\n    FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS'\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as userType[],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as number[]\r\n}\r\nexport type userActionsType =\r\n    ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unFollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleFollowing>\r\n\r\nexport const followSuccess = (userId: number) => ({type: 'FOLLOW', userId} as const)\r\nexport const unFollowSuccess = (userId: number) => ({type: 'UN_FOLLOW', userId} as const)\r\nexport const setUsers = (users: userType[]) => ({type: 'SET_USERS', users} as const)\r\nexport const setCurrentPage = (page: number) => ({type: 'SET_CURRENT_PAGE', page} as const)\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: 'SET_TOTAL_USERS_COUNT', totalCount} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: 'TOGGLE_IS_FETCHING', isFetching} as const)\r\nexport const toggleFollowing = (userId: number, isFetching: boolean) => ({\r\n    type: 'FOLLOWING_IN_PROGRESS',\r\n    userId,\r\n    isFetching\r\n} as const)\r\nexport const usersReducer = (state: UsersStateType = initialState, action: userActionsType): UsersStateType => {\r\n    switch (action.type) {\r\n        case ACTION_USER_REDUCER.FOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case ACTION_USER_REDUCER.UN_FOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case ACTION_USER_REDUCER.SET_USERS :\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case ACTION_USER_REDUCER.SET_CURRENT_PAGE :\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case ACTION_USER_REDUCER.SET_TOTAL_USERS_COUNT : {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n\r\n        }\r\n        case ACTION_USER_REDUCER.TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case ACTION_USER_REDUCER.FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number): AppThunk => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage))\r\n    dispatch(toggleIsFetching(true))\r\n    let res = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(res.data.items))\r\n    dispatch(setTotalUsersCount(res.data.totalCount))\r\n\r\n}\r\nexport const follow = (userId: number): AppThunk => async (dispatch) => {\r\n    dispatch(toggleFollowing(userId, true))\r\n    let res = await usersAPI.userFollow(userId)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(followSuccess(userId))\r\n    }\r\n    dispatch(toggleFollowing(userId, false))\r\n}\r\nexport const unfollow = (userId: number): AppThunk => async (dispatch) => {\r\n    dispatch(toggleFollowing(userId, true))\r\n    let res = await usersAPI.userUnfollow(userId)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(unFollowSuccess(userId))\r\n    }\r\n    dispatch(toggleFollowing(userId, false))\r\n}","import axios from \"axios\";\r\n\r\nexport interface userType  {\r\n    name: string\r\n    id: number\r\n    photos: {small:  string, large:  string }\r\n    status: string\r\n    followed: boolean\r\n}\r\ninterface commonUsers<T> {\r\n    items: T[],\r\n    \"totalCount\": number\r\n    \"error\": null | string\r\n}\r\nexport interface profileUser {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string| null\r\n    fullName: string\r\n    contacts: {\r\n        github: string| null\r\n        vk: string| null\r\n        facebook: string| null\r\n        instagram: string| null\r\n        twitter: string| null\r\n        website: string| null\r\n        youtube:string| null\r\n        mainLink:string| null\r\n    }\r\n    photos: {small: null | string, large: null | string }\r\n\r\n}\r\nexport interface responseType<T = {}> {\r\n    resultCode: number\r\n    messages:string[],\r\n    data: T\r\n}\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'f1483392-45ca-4f41-b8a9-ec8e05304fe6'\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(currentPage:number=1,pageSize:number=10){\r\n        return  instance.get<commonUsers<userType>>(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    userFollow(userId:number){\r\n        return instance.post<responseType<userType>>(`follow/${userId}`)\r\n    },\r\n    userUnfollow(userId:number){\r\n        return instance.delete<responseType<userType>>(`follow/${userId}`)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfileUser(userId:number){\r\n        return instance.get<profileUser>(`profile/${userId}`)\r\n    },\r\n    getStatus(userId:number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status:string) {\r\n        return instance.put<responseType<userType>>(`profile/status`, {status})\r\n    }\r\n}\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<responseType<{id:number,email:string,login:string}>>(`auth/me`)\r\n    },\r\n}\r\n\r\n","\r\nimport {Dispatch} from \"redux\";\r\nimport {profileAPI, profileUser} from \"../../../api/api\";\r\nimport {AppThunk} from \"../../redux-store\";\r\n\r\nenum ACTION_PROFILE_REDUCER {\r\n    ADD_POST = 'ADD_POST',\r\n    UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT',\r\n    SET_USERS_PROFILE = 'SET_USERS_PROFILE',\r\n    SET_USER_STATUS = 'SET_USER_STATUS'\r\n}\r\ntype postType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport type profileActionsType =\r\n    |   ReturnType<typeof addPost>\r\n    |   ReturnType<typeof setUsersProfileSuccess>\r\n    |   ReturnType<typeof setUserStatus>\r\n    |   ReturnType<typeof updateNewPostText>\r\n\r\nexport const addPost = () => ({type: 'ADD_POST'} as const)\r\nexport const updateNewPostText = (text: string) => ({type: 'UPDATE_NEW_POST_TEXT', newText: text} as const)\r\nexport const setUsersProfileSuccess = (profile: profileUser) => ({type: 'SET_USERS_PROFILE', profile} as const)\r\nexport const setUserStatus = (status: string) => ({type: 'SET_USER_STATUS', status} as const)\r\n\r\nexport type ProfileInitialStateType  = typeof initialState\r\nlet initialState = {\r\n    newPostText: '',\r\n    posts: [\r\n        {id: 1, message: 'Hello bro', likeCount: 0},\r\n    ] as postType[],\r\n    profile: null as null | profileUser,\r\n    status:''\r\n}\r\nexport const profileReducer = (state: ProfileInitialStateType = initialState, action: profileActionsType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_PROFILE_REDUCER.ADD_POST :\r\n            if (state.newPostText !== '') {\r\n                let newPost: postType = {\r\n                    id: 5,\r\n                    message: state.newPostText,\r\n                    likeCount: 0\r\n                }\r\n                return {\r\n                    ...state,\r\n                    posts: [...state.posts, newPost],\r\n                    newPostText: ''\r\n                }\r\n            }\r\n            return state\r\n        case ACTION_PROFILE_REDUCER.UPDATE_NEW_POST_TEXT : {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case ACTION_PROFILE_REDUCER.SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case ACTION_PROFILE_REDUCER.SET_USER_STATUS: {\r\n            return {...state,status: action.status}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const setUsersProfile = (userId:number):AppThunk => async (dispatch: Dispatch) => {\r\n    let res = await profileAPI.getProfileUser(userId)\r\n     dispatch(setUsersProfileSuccess(res.data))\r\n}\r\n\r\nexport const getUserStatus = (userId:number): AppThunk => async (dispatch: Dispatch) => {\r\n        let res = await profileAPI.getStatus(userId)\r\n        dispatch(setUserStatus(res.data))\r\n}\r\nexport const updateUserStatus = (status:string): AppThunk => async (dispatch: Dispatch) => {\r\n        let res = await profileAPI.updateStatus(status)\r\n                if(res.data.resultCode === 0) {\r\n                    dispatch(setUserStatus(status))\r\n                }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/designer.d9d0f86f.svg\";","import React, {FC, useState} from 'react'\r\nimport cn from \"classnames\";\r\nimport styles from './paginatio.module.scss'\r\n\r\ninterface PaginatorPropsType {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    onPageChanged: (p: number) => void\r\n    currentPage: number\r\n    portionSize: number\r\n}\r\n\r\nexport const Paginator: FC<PaginatorPropsType> = props => {\r\n    let {pageSize, currentPage, totalUsersCount, onPageChanged, portionSize} = props\r\n    let pageCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pageCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}> {'<'} </button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={cn({\r\n                        [styles.selectedPage]: currentPage === p\r\n                    }, styles.pageNumber)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>{'>'}</button>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import classes from \"./Users.module.scss\";\r\nimport userWithoutPhoto from \"../../assets/designer.svg\";\r\nimport React from \"react\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { userType } from \"../../api/api\";\r\nimport {Paginator} from \"./paginator\";\r\n\r\ntype propsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    onPageChanged: (p: number) => void\r\n    currentPage: number\r\n    users: userType[]\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n}\r\n\r\nexport const Users = (props: propsType) => {\r\n    const {\r\n        currentPage,\r\n        onPageChanged,\r\n        pageSize,\r\n        totalUsersCount,\r\n        users,\r\n        ...rest\r\n    } = props\r\n\r\n\r\n    const usersMap = users.map(u => {\r\n        return <div key={u.id} className={classes.users}>\r\n            <NavLink to={`/profile/${u.id}`}>\r\n                <img\r\n                    src={u.photos.small !== null\r\n                        ? u.photos.small\r\n                        : userWithoutPhoto} alt=\"user avatar\"/>\r\n            </NavLink>\r\n\r\n            {u.followed\r\n                ? <button disabled={rest.followingInProgress.some(id => id === u.id)}\r\n                          onClick={() => {\r\n                              rest.unFollow(u.id)\r\n                          }}>unFollow </button>\r\n                : <button disabled={rest.followingInProgress.some(id => id === u.id)}\r\n                          onClick={() => {\r\n                              rest.follow(u.id)\r\n                          }}> follow</button>}\r\n            <div>{u.name}</div>\r\n            <div>{u.status}</div>\r\n        </div>\r\n    })\r\n    return (\r\n        <div>\r\n            <div className={classes.pageNumbers}>\r\n                <Paginator\r\n                    pageSize={props.pageSize}\r\n                    totalUsersCount={props.totalUsersCount}\r\n                    onPageChanged={props.onPageChanged}\r\n                    currentPage={props.currentPage}\r\n                    portionSize={10}\r\n                />\r\n            </div>\r\n            <>\r\n                {usersMap}\r\n            </>\r\n        </div>)\r\n}","export default __webpack_public_path__ + \"static/media/Gear-0.6s-201px.37e1c5ac.svg\";","import React from 'react'\r\nimport preloader from \"../../assets/Gear-0.6s-201px.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt=\"preload gear\"/>\r\n        </>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    setCurrentPage, getUsers, follow, unfollow\r\n} from \"../../redux/reducers/user-reducer/users-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../preloader/preloader\";\r\nimport React from \"react\";\r\nimport {userType} from \"../../api/api\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    users: userType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\ntype MapDispatchPropsType = {\r\n    setCurrentPage: (page: number) => void\r\n    getUsers: (currentPage:number,pageSize:number) => void\r\n    follow:(userId:number) => void\r\n    unfollow:(userId:number)=> void\r\n}\r\nexport type usersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport class UsersContainer extends React.Component<usersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage,this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber,this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching\r\n                    ? <Preloader/>\r\n                    : null}\r\n                <Users pageSize={this.props.pageSize}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       users={this.props.users}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                       follow={this.props.follow}\r\n                       unFollow={this.props.unfollow}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n            setCurrentPage, getUsers,follow,unfollow\r\n        }\r\n    ))(UsersContainer)\r\n\r\n","import { AppThunk} from \"../../redux-store\";\r\nimport {authAPI} from \"../../../api/api\";\r\n\r\n\r\nenum ACTION_AUTH_REDUCER {\r\n    SET_USER_DATA = 'SET_USER_DATA'\r\n}\r\n\r\ntype AuthStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    id: null as null | number,\r\n    email: null  as null | string,\r\n    login: null  as null | string,\r\n    isAuth:false\r\n}\r\nexport type authActionTypes =   ReturnType<typeof setAuthUserData>\r\n\r\nexport const setAuthUserData =(id:number| null,email:string | null,login:string |null,isAuth:boolean) => ({type:'SET_USER_DATA',payload:{id,email,login,isAuth} }as const )\r\n\r\n\r\nexport const getAuthUserData = ():AppThunk => async (dispatch) =>  {\r\n    const res = await  authAPI.authMe()\r\n    if(res.data.resultCode === 0 ) {\r\n        let {id,login,email} = res.data.data\r\n        dispatch(setAuthUserData(id,email,login,true))\r\n    }\r\n}\r\n\r\nexport const authReducer = (state:AuthStateType = initialState,action:authActionTypes):AuthStateType => {\r\n    switch (action.type) {\r\n        case ACTION_AUTH_REDUCER.SET_USER_DATA: {\r\n            return {...state,...action.payload}\r\n        }\r\n        default: return state\r\n    }\r\n}","import React from \"react\";\r\nimport classes from \"./Post.module.css\"\r\n\r\n\r\ntype postType = {\r\n    id:number\r\n    message:string\r\n    likeCount:number\r\n}\r\n\r\nconst Post : React.FC<postType> = (props) => {\r\n    return (\r\n        <div className={classes.post} key={props.id}>\r\n                <img className={classes.avatar}\r\n                     src=\"https://image.freepik.com/free-vector/cute-avocado-cartoon-icon_138676-1820.jpg\" alt=\"ss\"/>\r\n            <div className={classes.message}>\r\n                {props.message}\r\n            </div>\r\n\r\n            <div className={classes.like}>\r\n                <button>+</button>\r\n                {props.likeCount}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./MyPosts.module.scss\"\r\nimport { MyPostPropsType } from \"./MyPostsCountainer\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts: React.FC<MyPostPropsType> = (props) => {\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.updateNewPostText(text)\r\n    }\r\n\r\n    let postsElement =\r\n        props.posts.map(p => <Post id={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n    return (\r\n        <div className={classes.posts}>\r\n            <div className={classes.createPost}>\r\n                <div className={classes.createPostTitle}>My posts</div>\r\n                <textarea className={classes.createPostArea}\r\n                          value={props.newPostText}\r\n                          onChange={onPostChange}> </textarea>\r\n                <button className={classes.createPostBtn} onClick={onAddPost}>Create new Post</button>\r\n            </div>\r\n            {postsElement}\r\n        </div>\r\n    )\r\n}\r\nexport default MyPosts","import React from \"react\";\r\nimport {addPost, updateNewPostText} from \"../../../redux/reducers/profile-reducer/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport { AppStateType} from \"../../../redux/redux-store\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ntype postType = {\r\n    id:number\r\n    message:string\r\n    likeCount: number\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    posts:postType[]\r\n    newPostText:string\r\n}\r\ntype MapDispatchToProps = {\r\n    updateNewPostText:(text:string) => void\r\n    addPost:() => void\r\n}\r\n\r\nexport type MyPostPropsType = MapStatePropsType & MapDispatchToProps\r\n\r\nconst mapStateToProps = (state:AppStateType):MapStatePropsType => {\r\n    return {\r\n        posts:state.profilePage.posts,\r\n        newPostText : state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchProps = (dispatch:Dispatch):MapDispatchToProps => {\r\n    return {\r\n        updateNewPostText : (text:string) => {\r\n            let action = updateNewPostText(text)\r\n            dispatch(action)\r\n    },\r\n        addPost : () => {\r\n            dispatch(addPost())\r\n        }\r\n    }\r\n}\r\nconst MyPostsCountainer = connect(mapStateToProps,mapDispatchProps) (MyPosts)\r\nexport default MyPostsCountainer","export default __webpack_public_path__ + \"static/media/profile-cover.97a7b2bf.jpg\";","import React, {FC, useEffect, useState} from 'react'\r\n\r\ninterface ProfileStatusPropsType {\r\n    status:string\r\n    updateUserStatus: (status:string) => void\r\n}\r\nexport const ProfileStatus:FC<ProfileStatusPropsType> = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [text, setText] = useState<string>('');\r\n\r\n    const onClickHandler = () => {\r\n        setEditMode(true)\r\n    }\r\n    const onBlurHandler = (e:any) => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(e.currentTarget.value)\r\n    }\r\n    const onChangeStatus = (e:any) => {\r\n        setText(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setText(props.status)\r\n    },[props.status])\r\n\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ? <input type=\"text\" value={text}  onBlur={onBlurHandler} autoFocus onChange={onChangeStatus}/>\r\n                :  <span onDoubleClick={onClickHandler}>{props.status && props.status}</span>}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.scss\"\r\nimport {Preloader} from \"../../preloader/preloader\";\r\nimport {profileUser} from \"../../../api/api\";\r\nimport mountains from '../../../assets/profile-cover.jpg'\r\nimport {ProfileStatus} from \"./profileStatus/ProfileStatus\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile : null |  profileUser\r\n    updateUserStatus: (status:string) => void\r\n    status:string\r\n}\r\nexport const ProfileInfo = (props:ProfileInfoPropsType)=> {\r\n    const {profile,status,updateUserStatus} = props\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n            <div className={classes.profileInfoBlock}>\r\n                <div className={classes.profileInfoBlock__img}>\r\n                    <img src={mountains} alt=\"miuntains\"/>\r\n                </div>\r\n                <div className={classes.imageBock}>\r\n                    <img src={profile.photos.large!} alt=\"\"/>\r\n                    <div>{profile.fullName}</div>\r\n                </div>\r\n                <div className={classes.status}>\r\n                    <ProfileStatus status={status} updateUserStatus={updateUserStatus}/>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.scss\"\r\n\r\nimport MyPostsCountainer from \"./MyPosts/MyPostsCountainer\";\r\nimport {profileContainerPropsType} from \"./ProfileContainer\";\r\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props:profileContainerPropsType) => {\r\n    const {profile,status,updateUserStatus} = props\r\n\r\n    return (\r\n        <div className={classes.profile}>\r\n            <ProfileInfo profile={profile} status={status} updateUserStatus={updateUserStatus}/>\r\n            <MyPostsCountainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    getUserStatus,\r\n    setUsersProfile, updateUserStatus,\r\n} from \"../../redux/reducers/profile-reducer/profile-reducer\";\r\nimport { RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {profileUser} from \"../../api/api\";\r\nimport {WithAuthRedirect} from \"../../hoc/authRedirectComponent\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    profile: null | profileUser\r\n    status:string\r\n}\r\ntype MapDispatchToProps = {\r\n    setUsersProfile: (userId:number) => void\r\n    getUserStatus: (userId:number) => void\r\n    updateUserStatus: (status:string) => void\r\n}\r\nexport type profileContainerPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype propsType = profileContainerPropsType & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<propsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if(!userId) {\r\n            userId = 15876\r\n        }\r\n        this.props.setUsersProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         updateUserStatus={this.props.updateUserStatus}\r\n                         status={this.props.status}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status:state.profilePage.status\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {setUsersProfile,getUserStatus,updateUserStatus}),\r\n    WithAuthRedirect,\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport {MemoryRouter, NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.scss\";\r\nimport {headerContainerPropsType} from \"./HeaderContainer\";\r\n\r\n\r\nconst Header = (props:headerContainerPropsType) => {\r\n    const {login,isAuth} = props\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.navBurger}>\r\n                <div className={classes.burger}>\r\n                    <input id=\"burger\" type=\"checkbox\" />\r\n                    <label htmlFor=\"burger\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </label>\r\n                </div>\r\n                <h4 className={classes.logo}>Valtika Social</h4>\r\n            </div>\r\n\r\n            <div className={classes.header_loginBlock}>\r\n                {isAuth ? login :  <MemoryRouter> <NavLink to={'/login'}>Login</NavLink></MemoryRouter>}\r\n\r\n                <a className={classes.register} href={'https://social-network.samuraijs.com/signUp'} target={'_blank'}>Register</a>\r\n            </div>\r\n        </header>\r\n    )\r\n\r\n};\r\nexport default Header;","\r\nimport React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/reducers/authReducer/authReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth:boolean\r\n    login:string | null\r\n}\r\ntype MapDispatchToProps = {\r\n    getAuthUserData: () => void\r\n}\r\nexport type headerContainerPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass HeaderContainer extends React.Component<headerContainerPropsType>{\r\n    componentDidMount() {\r\n      this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\nconst mpst = (state:AppStateType):MapStateToPropsType => ({\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login\r\n})\r\nexport default connect(mpst,{getAuthUserData})(HeaderContainer);","import React, { FC } from 'react'\r\nimport classes from './loginForm.module.scss'\r\nimport  {Field, InjectedFormProps,reduxForm} from \"redux-form\";\r\n\r\ninterface formDataType {\r\n    email:string\r\n    password:string\r\n    rememberMe:boolean\r\n}\r\nexport const Login = () => {\r\n    const onSubmit=(formData:formDataType) => {\r\n        console.log(formData)\r\n    }\r\n    return (\r\n        <div className={classes.loginPage}>\r\n            <h2 className={classes.title}>login</h2>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const LoginForm:FC<InjectedFormProps<formDataType>> = (props) => {\r\n    return (\r\n        <form className={classes.loginPage__form} onSubmit={props.handleSubmit}>\r\n            <Field type=\"text\" placeholder={'login'} name={'login'} component={'input'}/>\r\n            <Field type=\"password\" placeholder={'password'} name={'password'} component={'input'}/>\r\n            <label >\r\n                remember me\r\n                <Field type=\"checkbox\" component={'input'} name={'rememberMe'}/>\r\n            </label>\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm<formDataType>({\r\n    form:'login'\r\n})(LoginForm)\r\n","import React from 'react';\r\nimport classes from './App.module.scss';\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport {Route} from 'react-router-dom';\r\nimport News from \"./components/News/News\";\r\nimport Music from './components/Music/Music';\r\nimport Settings from \"./components/Settings/Settings\";\r\n\r\n\r\nimport DialogsContainer from \"./components/dialogs/DialogsContainer\";\r\n\r\nimport UsersContainer from \"./components/users/UsersContainer\";\r\nimport ProfileContainer from \"./components/profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/header/HeaderContainer\";\r\nimport { Login } from './components/login/login';\r\n\r\n\r\n\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className={classes.App}>\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={classes.AppWrapperContent}>\r\n                <Route path='/profile/:userId?'\r\n                       render={() => <ProfileContainer/>}/>\r\n                <Route path='/dialogs'\r\n                       render={() => <DialogsContainer/>}/>\r\n                <Route path='/users'\r\n                       render={() => <UsersContainer/>}/>\r\n                <Route path='/news' component={News}/>\r\n                <Route path='/music' component={Music}/>\r\n                <Route path='/settings' component={Settings}/>\r\n                <Route path='/login' component={Login}/>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport dialogsReducer, {dialogsActionsType,} from \"./reducers/dialog-reducer/dialogs-reducer\";\r\nimport {usersReducer, userActionsType} from \"./reducers/user-reducer/users-reducer\";\r\nimport {authActionTypes, authReducer} from \"./reducers/authReducer/authReducer\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {FormAction, reducer as formReducer} from 'redux-form'\r\nimport {profileActionsType, profileReducer} from \"./reducers/profile-reducer/profile-reducer\";\r\n\r\n\r\nexport type AllActionsType =\r\n    | authActionTypes\r\n    | userActionsType\r\n    | dialogsActionsType\r\n    | profileActionsType\r\n    | FormAction\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown,AllActionsType>\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth:authReducer,\r\n    form:formReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunkMiddleware),\r\n\r\n)\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./redux/redux-store\";\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <App/>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>,document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"DialogItem_grid__TV_g4\",\"dialog\":\"DialogItem_dialog__xHpDc\",\"dialogUsername\":\"DialogItem_dialogUsername__oDMwR\",\"active\":\"DialogItem_active__adci6\",\"dialogAvatar\":\"DialogItem_dialogAvatar__1xi1U\",\"dialogText\":\"DialogItem_dialogText__11WIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__275JI\",\"dialogsHeader\":\"Dialogs_dialogsHeader__1TRNg\",\"dialogItems\":\"Dialogs_dialogItems__38_FQ\",\"messages\":\"Dialogs_messages__1nCHU\",\"message\":\"Dialogs_message__3MQ-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__33lcS\",\"navBurger\":\"Header_navBurger__COwg9\",\"burger\":\"Header_burger__1dlOZ\",\"logo\":\"Header_logo__30ArB\",\"header_loginBlock\":\"Header_header_loginBlock__2UzxD\",\"register\":\"Header_register__2OL4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2I_xc\",\"createPost\":\"MyPosts_createPost__uUctv\",\"createPostTitle\":\"MyPosts_createPostTitle__1fzUM\",\"createPostBtn\":\"MyPosts_createPostBtn__2XToN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__34LLy\",\"avatar\":\"Post_avatar__2MS2B\",\"message\":\"Post_message__2IK0g\",\"like\":\"Post_like__3cKJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__17tW3\",\"profileInfoBlock__img\":\"ProfileInfo_profileInfoBlock__img__14Ihs\",\"imageBock\":\"ProfileInfo_imageBock__BwLXZ\",\"status\":\"ProfileInfo_status__2RRDq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginatio_paginator__3H-A9\",\"pageNumber\":\"paginatio_pageNumber__hRNvM\",\"selectedPage\":\"paginatio_selectedPage__1C4zx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"loginForm_loginPage__umyyE\",\"title\":\"loginForm_title__1RDgh\",\"loginPage__form\":\"loginForm_loginPage__form__TGYr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__I_VVf\",\"App-wrapper-content\":\"App_App-wrapper-content__1GaEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2IkwE\",\"footerList\":\"Footer_footerList__3-7iW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1aQkZ\",\"newsTitle\":\"News_newsTitle__28z5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__Iu_YA\",\"pageNumbers\":\"Users_pageNumbers__36DaG\",\"selectPage\":\"Users_selectPage__2Kt9k\"};"],"sourceRoot":""}