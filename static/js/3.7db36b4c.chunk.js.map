{"version":3,"sources":["pages/profile/MyPosts/MyPosts.module.scss","pages/profile/ProfileInfo/ProfileInfo.module.scss","pages/profile/MyPosts/Post/Post.module.css","pages/profile/ProfileInfo/profileStatus.tsx","pages/profile/ProfileInfo/ProfileInfo.tsx","pages/profile/MyPosts/Post/Post.tsx","pages/profile/MyPosts/AddPost.tsx","pages/profile/MyPosts/MyPosts.tsx","pages/profile/MyPosts/MyPostsContainer.ts","pages/profile/Profile.tsx","pages/profile/ProfileContainer.tsx"],"names":["module","exports","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","type","onBlur","e","updateStatus","currentTarget","value","autoFocus","onChange","onKeyPress","key","onTouchStart","ProfileInfo","profile","className","classes","content","src","photos","small","userWithoutPhoto","alt","fullName","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJobDescription","Preloader","Post","post","avatar","message","like","likeCount","maxLengthCreator10","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","createPostArea","component","Textarea","name","placeholder","validate","required","createPostBtn","MyPosts","postsElement","posts","map","p","id","createPost","createPostTitle","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostAC","Profile","ProfileContainer","userId","Number","this","match","params","history","push","setUserProfile","getUserStatus","updateUserStatus","React","Component","compose","authorizedUserId","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7db36b4c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1Akp4\",\"createPost\":\"MyPosts_createPost__3-Zsy\",\"createPostTitle\":\"MyPosts_createPostTitle__1HQZt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__Uqcp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__38OuI\",\"avatar\":\"Post_avatar__LQGo4\",\"message\":\"Post_message__2mjEJ\",\"like\":\"Post_like__VeeTu\"};","import React, {FC, useEffect, useState} from \"react\";\r\n\r\nexport type EditableSpanPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\nexport const ProfileStatus:FC<EditableSpanPropsType> = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState('');\r\n\r\n      useEffect(() => {\r\n          setStatus(props.status)\r\n      },[props.status])\r\n\r\n    const onDoubleClick = () => {\r\n        setEditMode(true)\r\n    }\r\n   const onBlur = (e: any) => {\r\n       setEditMode(false)\r\n       props.updateStatus(e.currentTarget.value)\r\n    }\r\n\r\n   const onChange = (e: any) => {\r\n       setStatus(e.currentTarget.value)\r\n\r\n    }\r\n    const onEnter = (e: any) => {\r\n        if (e.key === 'Enter') {\r\n            setEditMode(false)\r\n            props.updateStatus(e.currentTarget.value)\r\n        }\r\n    }\r\n        return (\r\n            <div>\r\n                {!editMode\r\n                    ? <span\r\n                        onDoubleClick={onDoubleClick}\r\n                        onTouchStart={onDoubleClick}>{!props.status ? 'hey' : props.status}</span>\r\n                    : <input\r\n                        type=\"text\"\r\n                        onBlur={onBlur}\r\n                        value={status}\r\n                        autoFocus\r\n                        onChange={onChange}\r\n                        onKeyPress={onEnter}\r\n                    />\r\n                }\r\n            </div>\r\n\r\n        )\r\n}\r\n\r\nexport default ProfileStatus","import React, {FC} from \"react\";\r\nimport classes from \"./ProfileInfo.module.scss\"\r\nimport {Preloader} from \"../../../components/common/Preloader/Preloader\";\r\nimport {ProfilePropsType} from \"../Profile\";\r\nimport userWithoutPhoto from '../../../assets/imagies/icons8-user-male.svg'\r\nimport ProfileStatus from \"./profileStatus\";\r\n\r\n\r\nconst ProfileInfo: FC<ProfilePropsType> = ({profile ,status ,updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.content}>\r\n                    <img src={profile.photos.small ? profile.photos.small : userWithoutPhoto} alt=\"\"/>\r\n\r\n                    <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n\r\n                    <div> {profile.fullName} </div>\r\n                    <div> {profile.aboutMe} </div>\r\n                    <ul>\r\n                        <li>{profile.contacts.facebook ? `Facebook: ${profile.contacts.facebook}`:''}</li>\r\n                        <li>{profile.contacts.website}</li>\r\n                        <li>{profile.contacts.vk}</li>\r\n                        <li>{profile.contacts.twitter}</li>\r\n                        <li>{profile.contacts.instagram}</li>\r\n                        <li>{profile.contacts.youtube}</li>\r\n                        <li>{profile.contacts.github}</li>\r\n                        <li>{profile.contacts.mainLink}</li>\r\n                    </ul>\r\n                    <div>{profile.lookingForAJobDescription}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\r\n}\r\nexport default ProfileInfo\r\n","import React from \"react\";\r\nimport { postType } from \"../../../../redux/store\";\r\nimport classes from \"./Post.module.css\"\r\n\r\n\r\n\r\n\r\nconst Post : React.FC<postType> = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n                <img className={classes.avatar}\r\n                     src=\"https://image.freepik.com/free-vector/cute-avocado-cartoon-icon_138676-1820.jpg\" alt=\"ss\"/>\r\n            <div className={classes.message}>\r\n                {props.message}\r\n            </div>\r\n\r\n            <div className={classes.like}>\r\n                <button>+</button>\r\n                {props.likeCount}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post","import React, { FC} from \"react\";\r\nimport classes from \"./MyPosts.module.scss\"\r\nimport {Field, InjectedFormProps} from \"redux-form\";\r\nimport {addPostExtendsFormDataType, addPostFormDataType } from \"./MyPosts\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validate/validators\";\r\nimport {Textarea} from \"../../../components/common/formsControl/FormsControl\";\r\n\r\n\r\n\r\nconst maxLengthCreator10 =maxLengthCreator(10)\r\nexport const AddPost: FC<InjectedFormProps<addPostFormDataType> & addPostExtendsFormDataType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={classes.createPostArea}\r\n                   component={Textarea}\r\n                   name={'newPostText'}\r\n                   placeholder={'enter message'}\r\n                   validate={[required,maxLengthCreator10]}\r\n            />\r\n            <button className={classes.createPostBtn}>Create new Post</button>\r\n        </form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.scss\"\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm} from \"redux-form\";\r\nimport {MyPostPropsType} from \"./MyPostsContainer\";\r\nimport {AddPost} from \"./AddPost\";\r\n\r\nconst MyPosts: React.FC<MyPostPropsType> = (props) => {\r\n    let addNewPost = (values: addPostFormDataType) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    let postsElement = props.posts.map(p => <Post id={p.id} message={p.message} likeCount={p.likeCount} key={p.id}/>)\r\n\r\n    return (\r\n        <div className={classes.posts}>\r\n            <div className={classes.createPost}>\r\n                <div className={classes.createPostTitle}>My posts</div>\r\n                <DialogsReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            {postsElement}\r\n        </div>\r\n    )\r\n}\r\nexport type addPostFormDataType = {\r\n    newPostText: string\r\n}\r\nexport type addPostExtendsFormDataType = {}\r\nexport const DialogsReduxForm = reduxForm<addPostFormDataType, addPostExtendsFormDataType>({\r\n    form: 'dialogsAddMessageForm'\r\n})(AddPost)\r\nexport default MyPosts\r\n","import {postType} from \"../../../redux/store\";\r\n\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {addPostAC} from \"../../../redux/profile-reducer/profile-reducer\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: postType[]\r\n}\r\ntype MapDispatchToProps = {\r\n    addPost: (newPostText:string) => void\r\n}\r\nexport type MyPostPropsType = MapStatePropsType & MapDispatchToProps\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\nconst mapDispatchProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        addPost: (newPostText:string) => {\r\n            dispatch(addPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchProps)(MyPosts)\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport classes from \"./Profile.module.scss\"\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {userProfileType} from \"../../dal/api\";\r\n\r\n\r\nexport type ProfilePropsType = {\r\n    profile: null | userProfileType\r\n    status:string\r\n    updateStatus:(status:string) => void\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> =( { profile, status, updateStatus})=> {\r\n    return (\r\n        <div className={classes.profile}>\r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus} />\r\n            <MyPostsContainer  />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\n\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from 'redux';\r\nimport {userProfileType} from \"../../dal/api\";\r\nimport {getUserStatus, setUserProfile, updateUserStatus} from \"../../redux/profile-reducer/profile-reducer\";\r\n\r\n\r\nexport type ProfileContainerPropsType = MapStatePropsType & MapDispatchToProps\r\ntype MapDispatchToProps = {\r\n    setUserProfile: (userId: number) => void\r\n    getUserStatus: (userid: number) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\ntype MapStatePropsType = {\r\n    profile: null | userProfileType\r\n    status: string\r\n    authorizedUserId:number | null\r\n    isAuth:boolean\r\n    userId:number | null\r\n}\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype propsType = ProfileContainerPropsType & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<propsType> {\r\n    componentDidMount() {\r\n        let userId:number|null = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        if(userId) {\r\n            this.props.setUserProfile(userId)\r\n            this.props.getUserStatus(userId)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile  {...this.props}\r\n                          profile={this.props.profile}\r\n                          status={this.props.status}\r\n                          updateStatus={this.props.updateUserStatus}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId:state.auth.userId,\r\n    isAuth:state.auth.isAuth,\r\n    userId:state.auth.userId\r\n})\r\n// 1st wrap - redirect hoc ( custom hoc)\r\n// 2nd wrap - with router hoc\r\n//3rd wrap - connect hoc\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(\r\n        mapStateToProps, {\r\n            setUserProfile, updateUserStatus, getUserStatus\r\n        }),\r\n    withRouter,\r\n)(ProfileContainer)"],"sourceRoot":""}